{"version":3,"file":"static/js/4047.79a7b452.chunk.js","mappings":"qLAKAA,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAI1C,OACE,gBACEC,UAAU,WACVC,wBAAyB,CACvBC,QANGb,EAAAA,EAAAA,IAAOU,EAAM,CAAEI,QAAQ,MAUjC,C,mGC3BYC,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,qFAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,gEAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,qdAQT,ECvBKC,EAAuB,CAC3B,CACEC,MAAO,WACPC,IAAK,MACLC,SAAU,CACR,CACEF,MAAO,aACPC,IAAK,QACLC,SAAU,CACR,CACEF,MAAO,OACPC,IAAK,WAEP,CACED,MAAO,OACPC,IAAK,UACLC,SAAU,CACR,CACEF,MAAO,OACPC,IAAK,aAEP,CACED,OAAO,uDACPC,IAAK,YACLC,SAAU,CACR,CACEF,MAAO,2BACPC,IAAK,eAEP,CACED,MAAO,2BACPC,IAAK,eAEP,CACED,OACE,cAAGG,MAAO,CAAEC,MAAO,OAASC,KAAK,KAAjC,sCAIFJ,IAAK,qBAQnB,CACED,MAAO,aACPC,IAAK,QACLC,SAAU,CAAC,CAAEF,OAAO,iBAAMG,MAAO,CAAEC,MAAO,WAAtB,iBAA+CH,IAAK,eAI9E,CACED,MAAO,WACPC,IAAK,MACLC,SAAU,CACR,CACEF,MAAO,aACPC,IAAK,QACLC,SAAU,CACR,CACEF,MAAO,OACPC,IAAK,WAEP,CACED,MAAO,OACPC,IAAK,aAIX,CACED,MAAO,aACPC,IAAK,QACLC,SAAU,CAAC,CAAEF,OAAO,iBAAMG,MAAO,CAAEC,MAAO,WAAtB,iBAA+CH,IAAK,gBAMnEK,EAAiB,WAC5B,OACE,gBAAKb,UAAU,KAAf,UACE,gBAAKA,UAAU,SAAf,UACE,SAAC,KAAD,CAAMc,KAAMR,OAInB,E,UCxFKQ,EAAkB,CACtBC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAHe,CAAC,CAAEC,eAAI,OAAQC,eAAI,qBAAOC,eAAI,WAAYC,qBAAK,MAMnDC,EAAqB,WAChC,OACE,gBAAKrB,UAAU,YAAf,UACE,SAAC,KAAD,CAAOc,KAAMA,KAGlB,ECdYf,G,SAAOuB,E,QAAAA,GAAU,ymECsB9B,EAf0B,WACxB,OACE,iBAAKtB,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,0BACA,SAACI,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACQ,EAAD,KACA,SAAC,KAAD,CAAOR,MAAO,EAAd,uCACA,SAACP,EAAA,EAAD,CAAUC,KAAMA,KAChB,SAAC,KAAD,CAAOM,MAAO,EAAd,2BACA,SAACgB,EAAD,MAGL,C,uDCrBM,IAAMC,EAAY,SAACC,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/CodeShow.tsx","eg/TreeEg/Intro.tsx","eg/TreeEg/Demo.tsx","eg/TreeEg/ApiIntro.tsx","eg/TreeEg/code.tsx","eg/TreeEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>多层次的结构列表。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>Tree: 主要组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>\n            文件夹、组织架构、生物分类、国家地区等等，世间万物的大多数结构都是树形结构。使用 树控件\n            可以完整展现其中的层级关系，并具有展开收起选择等交互功能。\n          </li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React from 'react';\nimport { Tree } from '../../lib';\nimport { TypeTree } from '../../lib/Tree/Tree';\n\nconst treeData: TypeTree[] = [\n  {\n    title: 'Parent 1',\n    key: '1-0',\n    children: [\n      {\n        title: 'Parent 1-0',\n        key: '1-0-0',\n        children: [\n          {\n            title: 'leaf',\n            key: '1-0-0-0'\n          },\n          {\n            title: 'leaf',\n            key: '1-0-0-1',\n            children: [\n              {\n                title: 'leaf',\n                key: '1-0-0-1-0'\n              },\n              {\n                title: <span>支持图标</span>,\n                key: '1-0-0-1-1',\n                children: [\n                  {\n                    title: '商品价格',\n                    key: '1-0-0-0-1-0'\n                  },\n                  {\n                    title: '商品详情',\n                    key: '1-0-0-0-1-1'\n                  },\n                  {\n                    title: (\n                      <a style={{ color: 'red' }} href=\"/#\">\n                        商品链接\n                      </a>\n                    ),\n                    key: '1-0-0-1-1-2'\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      {\n        title: 'Parent 1-1',\n        key: '0-0-1',\n        children: [{ title: <span style={{ color: '#1890ff' }}>sss</span>, key: '0-0-1-0' }]\n      }\n    ]\n  },\n  {\n    title: 'Parent 2',\n    key: '2-0',\n    children: [\n      {\n        title: 'Parent 2-0',\n        key: '2-0-0',\n        children: [\n          {\n            title: 'leaf',\n            key: '2-0-0-0'\n          },\n          {\n            title: 'leaf',\n            key: '0-0-0-1'\n          }\n        ]\n      },\n      {\n        title: 'Parent 2-1',\n        key: '2-0-1',\n        children: [{ title: <span style={{ color: '#1890ff' }}>sss</span>, key: '0-0-1-0' }]\n      }\n    ]\n  }\n];\n\nexport const Demo: React.FC = () => {\n  return (\n    <div className=\"Eg\">\n      <div className=\"showEg\">\n        <Tree data={treeData} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [{ 属性: 'data', 说明: '树数据', 类型: 'TypeTree', 默认值: '' }];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Tree } from 'uix-react';\\n\nconst treeData: TypeTree[] = [\n  {\n    title: 'Parent 1',\n    key: '1-0',\n    children: [\n      {\n        title: 'Parent 1-0',\n        key: '1-0-0',\n        children: [\n          {\n            title: 'leaf',\n            key: '1-0-0-0'\n          },\n          {\n            title: 'leaf',\n            key: '1-0-0-1',\n            children: [\n              {\n                title: 'leaf',\n                key: '1-0-0-1-0'\n              },\n              {\n                title: <span>支持图标</span>,\n                key: '1-0-0-1-1',\n                children: [\n                  {\n                    title: '商品价格',\n                    key: '1-0-0-0-1-0'\n                  },\n                  {\n                    title: '商品详情',\n                    key: '1-0-0-0-1-1'\n                  },\n                  {\n                    title: (\n                      <a style={{ color: 'red' }} href=\"/#\">\n                        商品链接\n                      </a>\n                    ),\n                    key: '1-0-0-1-1-2'\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      {\n        title: 'Parent 1-1',\n        key: '0-0-1',\n        children: [{ title: <span style={{ color: '#1890ff' }}>sss</span>, key: '0-0-1-0' }]\n      }\n    ]\n  },\n  {\n    title: 'Parent 2',\n    key: '2-0',\n    children: [\n      {\n        title: 'Parent 2-0',\n        key: '2-0-0',\n        children: [\n          {\n            title: 'leaf',\n            key: '2-0-0-0'\n          },\n          {\n            title: 'leaf',\n            key: '0-0-0-1'\n          }\n        ]\n      },\n      {\n        title: 'Parent 2-1',\n        key: '2-0-1',\n        children: [{ title: <span style={{ color: '#1890ff' }}>sss</span>, key: '0-0-1-0' }]\n      }\n    ]\n  }\n];\nexport const App:React.RC=()=>{\n  return (\n    <div className=\"Eg\">\n      <div className=\"showEg\">\n        <Tree data={treeData} />\n      </div>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Tree 树</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","treeData","title","key","children","style","color","href","Demo","data","header","body","属性","说明","类型","默认值","ApiIntro","translate","example"],"sourceRoot":""}