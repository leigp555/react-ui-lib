{"version":3,"file":"static/js/1968.e542a145.chunk.js","mappings":"0LAGaA,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,uGAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,iEAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,2BACE,oXAGA,oLAKT,E,SCxBYC,EAAiB,WAC5B,OAAsBC,EAAAA,EAAAA,UAAS,KAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAS,SAACC,GAEd,IADA,IAAMC,EAA2B,GACxBC,EAAI,EAAGA,EAAIF,EAAKE,IACvBD,EAAME,MACJ,6PAAQC,KAAKC,WAOjB,OAAOJ,CACR,EACD,OACE,iBAAKK,UAAU,KAAf,WACE,yBAAMP,EAAO,MACb,SAAC,KAAD,CACEQ,UAAW,IACXC,YAAY,SACZC,UAAWC,SAASC,eAAe,sBAHrC,UAKE,SAAC,KAAD,CAAQC,QAAS,kBAAMd,EAAOD,EAAM,GAAnB,EAAjB,mFAEF,yBAAME,EAAO,MACb,SAAC,KAAD,CAAOQ,UAAWV,EAAKY,UAAWC,SAASC,eAAe,sBAA1D,UACE,gBAAKE,KAAK,eAAV,UACE,SAAC,KAAD,CAAQD,QAAS,kBAAMd,EAAOD,EAAM,GAAnB,EAAjB,2FAGJ,yBAAME,EAAO,OACb,SAAC,KAAD,CACEQ,UAAW,IACXC,YAAY,MACZC,UAAWC,SAASC,eAAe,sBAHrC,UAKE,SAAC,KAAD,CAAQC,QAAS,kBAAMd,EAAOD,EAAM,GAAnB,EAAjB,mFAEF,yBAAME,EAAO,QAGlB,E,UC/BKe,EAAkB,CACtBC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAZe,CACf,CACEC,eAAI,YACJC,eAAI,qEACJC,eAAI,cACJC,qBAAK,iBAEP,CAAEH,eAAI,YAAaC,eAAI,iCAASC,eAAI,SAAUC,qBAAK,KACnD,CAAEH,eAAI,cAAeC,eAAI,2BAAQC,eAAG,6BAA+BC,qBAAK,WAO7DC,EAAqB,WAChC,OACE,gBAAKf,UAAU,YAAf,UACE,SAAC,KAAD,CAAOQ,KAAMA,KAGlB,ECvBYQ,G,SAAOC,E,QAAAA,GAAU,moDCsB9B,EAf0B,WACxB,OACE,iBAAKjB,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,iCACA,SAACb,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACC,EAAD,KACA,SAAC,KAAD,CAAOD,MAAO,EAAd,uCACA,SAAC8B,EAAA,EAAD,CAAUF,KAAMA,KAChB,SAAC,KAAD,CAAO5B,MAAO,EAAd,2BACA,SAAC2B,EAAD,MAGL,C,gGCjBDI,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMT,EAA4B,SAAC,GAAc,IAAZF,EAAW,EAAXA,KAI1C,OACE,gBACEhB,UAAU,WACV4B,wBAAyB,CACvBC,QANGV,EAAAA,EAAAA,IAAOH,EAAM,CAAEc,QAAQ,MAUjC,C,uDC7BM,IAAMb,EAAY,SAACc,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/AffixEg/Intro.tsx","eg/AffixEg/Demo.tsx","eg/AffixEg/ApiIntro.tsx","eg/AffixEg/code.tsx","eg/AffixEg/index.tsx","eg/CodeShow.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>将页面元素钉在可视范围。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>Affix: 主要组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>\n            当内容区域比较长，需要滚动页面时，这部分内容对应的操作或者导航需要在滚动范围内始终展现。常用于侧边菜单和按钮组合。\n          </li>\n          <li>页面可视范围过小时，慎用此功能以免遮挡页面内容。</li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React, { useState } from 'react';\nimport { Affix, Button } from '../../lib';\n\nexport const Demo: React.FC = () => {\n  const [top, setTop] = useState(200);\n  const render = (num: number): React.ReactNode[] => {\n    const vNode: React.ReactNode[] = [];\n    for (let i = 0; i < num; i++) {\n      vNode.push(\n        <p key={Math.random()}>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. A aperiam, delectus deleniti\n          enim, eveniet hic magnam nihil nisi placeat quam quibusdam ratione reiciendis rem\n          repellendus reprehenderit saepe sequi, similique tenetur.\n        </p>\n      );\n    }\n    return vNode;\n  };\n  return (\n    <div className=\"Eg\">\n      <div>{render(2)}</div>\n      <Affix\n        offsetTop={100}\n        rowPosition=\"center\"\n        container={document.getElementById('app-component-show')}\n      >\n        <Button onClick={() => setTop(top + 10)}>距离顶部100px固定,水平中间</Button>\n      </Affix>\n      <div>{render(8)}</div>\n      <Affix offsetTop={top} container={document.getElementById('app-component-show')}>\n        <div role=\"presentation\">\n          <Button onClick={() => setTop(top + 10)}> 距离顶部200px固定，水平左边</Button>\n        </div>\n      </Affix>\n      <div>{render(10)}</div>\n      <Affix\n        offsetTop={300}\n        rowPosition=\"end\"\n        container={document.getElementById('app-component-show')}\n      >\n        <Button onClick={() => setTop(top + 10)}>距离顶部300px固定,水平右边</Button>\n      </Affix>\n      <div>{render(10)}</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [\n  {\n    属性: 'offsetTop',\n    说明: '距离顶部多少时开始固钉',\n    类型: 'HTMLElement',\n    默认值: 'document.body'\n  },\n  { 属性: 'container', 说明: '滑动的容器', 类型: 'number', 默认值: '0' },\n  { 属性: 'rowPosition', 说明: '水平位置', 类型: `'start' | 'center' | 'end'`, 默认值: 'start' }\n];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Affix } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n const [top, setTop] = useState(200);\n  const render = (num: number): React.ReactNode[] => {\n    const vNode: React.ReactNode[] = [];\n    for (let i = 0; i < num; i++) {\n      vNode.push(\n        <p key={Math.random()}>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. A aperiam, delectus deleniti\n          enim, eveniet hic magnam nihil nisi placeat quam quibusdam ratione reiciendis rem\n          repellendus reprehenderit saepe sequi, similique tenetur.\n        </p>\n      );\n    }\n    return vNode;\n  };\n  return (\n    <div className=\"Eg\">\n      <div>{render(2)}</div>\n      <Affix\n        offsetTop={100}\n        rowPosition=\"center\"\n        container={document.getElementById('app-component-show')}\n      >\n        <Button onClick={() => setTop(top + 10)}>距离顶部100px固定,水平中间</Button>\n      </Affix>\n      <div>{render(8)}</div>\n      <Affix offsetTop={top} container={document.getElementById('app-component-show')}>\n        <div role=\"presentation\">\n          <Button onClick={() => setTop(top + 10)}> 距离顶部200px固定，水平左边</Button>\n        </div>\n      </Affix>\n      <div>{render(10)}</div>\n      <Affix\n        offsetTop={300}\n        rowPosition=\"end\"\n        container={document.getElementById('app-component-show')}\n      >\n        <Button onClick={() => setTop(top + 10)}>距离顶部300px固定,水平右边</Button>\n      </Affix>\n      <div>{render(10)}</div>\n    </div>\n  );\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Affix 固钉</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["Intro","level","Demo","useState","top","setTop","render","num","vNode","i","push","Math","random","className","offsetTop","rowPosition","container","document","getElementById","onClick","role","data","header","body","属性","说明","类型","默认值","ApiIntro","code","translate","CodeShow","marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","dangerouslySetInnerHTML","__html","breaks","example"],"sourceRoot":""}