{"version":3,"file":"static/js/3455.00d2459e.chunk.js","mappings":"wLAGaA,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,UAAC,KAAD,YACE,2VAGA,yFACA,2BACE,0LACA,sJACA,4GACA,wHACA,4JAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,sEAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,0HAIP,EC7BYC,EAAiB,WAC5B,OACE,iBAAKC,UAAU,KAAf,WACE,SAAC,KAAD,CAAOF,MAAO,EAAd,wCACA,iBAAKE,UAAU,SAAf,WACE,SAAC,KAAD,4BACA,SAAC,KAAD,CAAQC,KAAK,UAAb,2BACA,SAAC,KAAD,CAAQA,KAAK,UAAb,2BACA,SAAC,KAAD,CAAQA,KAAK,OAAb,2BACA,SAAC,KAAD,CAAQA,KAAK,OAAb,2BACA,SAAC,KAAD,CAAQA,KAAK,SAAb,2BACA,SAAC,KAAD,CAAQC,UAAQ,EAAhB,2BACA,SAAC,KAAD,CAAQC,QAAM,EAAd,8BAGF,SAAC,KAAD,CAAOL,MAAO,EAAd,wCACA,iBAAKE,UAAU,SAASI,MAAO,CAAEC,WAAY,UAA7C,WACE,0BACE,SAAC,KAAD,CAAQJ,KAAK,UAAUK,KAAK,MAA5B,oBAIF,0BACE,SAAC,KAAD,CAAQL,KAAK,UAAUK,KAAK,SAA5B,uBAIF,0BACE,SAAC,KAAD,CAAQL,KAAK,UAAUK,KAAK,QAA5B,yBAMJ,SAAC,KAAD,CAAOR,MAAO,EAAd,iCACA,gBAAKE,UAAU,SAASI,MAAO,CAAEC,WAAY,UAA7C,UACE,SAAC,KAAD,CAAQJ,KAAK,UAAUM,SAAO,EAA9B,yBAMP,E,UC9BKC,EAAkB,CACtBC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAbe,CACf,CAAEC,eAAI,SAAUC,eAAI,6CAAWC,eAAI,UAAWC,qBAAK,SACnD,CAAEH,eAAI,WAAYC,eAAI,uCAAUC,eAAI,UAAWC,qBAAK,SACpD,CAAEH,eAAI,UAAWC,eAAI,mDAAYC,eAAI,UAAWC,qBAAK,SACrD,CACEH,eAAI,OACJC,eAAI,2BACJC,eAAG,sDACHC,qBAAK,aAQIC,EAAqB,WAChC,OACE,gBAAKf,UAAU,YAAf,UACE,SAAC,KAAD,CAAOQ,KAAMA,KAGlB,ECxBYQ,G,SAAOC,E,QAAAA,GAAU,igDCsB9B,EAf0B,WACxB,OACE,iBAAKjB,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,kCACA,SAACH,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACC,EAAD,KACA,SAAC,KAAD,CAAOD,MAAO,EAAd,uCACA,SAACoB,EAAA,EAAD,CAAUF,KAAMA,KAChB,SAAC,KAAD,CAAOlB,MAAO,EAAd,2BACA,SAACiB,EAAD,MAGL,C,gGCjBDI,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMT,EAA4B,SAAC,GAAc,IAAZF,EAAW,EAAXA,KAI1C,OACE,gBACEhB,UAAU,WACV4B,wBAAyB,CACvBC,QANGV,EAAAA,EAAAA,IAAOH,EAAM,CAAEc,QAAQ,MAUjC,C,uDC7BM,IAAMb,EAAY,SAACc,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/ButtonEg/Intro.tsx","eg/ButtonEg/Demo.tsx","eg/ButtonEg/ApiIntro.tsx","eg/ButtonEg/code.tsx","eg/ButtonEg/index.tsx","eg/CodeShow.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>\n          主要用于即时操作，表示交互时发生的动作，响应用户点击行为触发相应的业务逻辑，比如添加、保存、删除和注册等。\n        </p>\n        <p>我们提供了五种按钮。</p>\n        <ul>\n          <li>主按钮：用于主行动点，一个操作区域只能有一个主按钮。</li>\n          <li>默认按钮：用于没有主次之分的一组行动点。</li>\n          <li>虚线按钮：常用于添加操作。</li>\n          <li>文本按钮：用于最次级的行动点。</li>\n          <li>链接按钮：一般用于链接，即导航至某位置。</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>组件概述</Title>\n      <Paragraph>\n        <ul>\n          <li>Button：主要组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <p>用于启动即时操作，如提交表单。</p>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React from 'react';\nimport { Button, Title } from '../../lib';\n\nexport const Demo: React.FC = () => {\n  return (\n    <div className=\"Eg\">\n      <Title level={4}>基本样式:</Title>\n      <div className=\"showEg\">\n        <Button>按钮</Button>\n        <Button type=\"primary\">按钮</Button>\n        <Button type=\"default\">按钮</Button>\n        <Button type=\"link\">按钮</Button>\n        <Button type=\"text\">按钮</Button>\n        <Button type=\"dashed\">按钮</Button>\n        <Button disabled>按钮</Button>\n        <Button radius>按钮</Button>\n      </div>\n\n      <Title level={4}>不同大小:</Title>\n      <div className=\"showEg\" style={{ alignItems: 'center' }}>\n        <div>\n          <Button type=\"primary\" size=\"big\">\n            big\n          </Button>\n        </div>\n        <div>\n          <Button type=\"primary\" size=\"normal\">\n            normal\n          </Button>\n        </div>\n        <div>\n          <Button type=\"primary\" size=\"small\">\n            small\n          </Button>\n        </div>\n      </div>\n\n      <Title level={4}>加载中</Title>\n      <div className=\"showEg\" style={{ alignItems: 'center' }}>\n        <Button type=\"primary\" loading>\n          Loading\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [\n  { 属性: 'radius', 说明: '边角是否为圆弧', 类型: 'boolean', 默认值: 'false' },\n  { 属性: 'disabled', 说明: '是否禁止点击', 类型: 'boolean', 默认值: 'false' },\n  { 属性: 'loading', 说明: '是否为加载中状态', 类型: 'boolean', 默认值: 'false' },\n  {\n    属性: 'type',\n    说明: '按钮类型',\n    类型: ` 'primary' | 'text' | 'link' | 'dashed' | 'default'`,\n    默认值: 'primary'\n  }\n];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Button } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  return (\n     <div>\n       <div className=\"perEg\">\n        <Title level={4}>基本样式:</Title>\n        <div className=\"showEg\">\n          <Button>按钮</Button>\n          <Button type=\"primary\">按钮</Button>\n          <Button type=\"default\">按钮</Button>\n          <Button type=\"link\">按钮</Button>\n          <Button type=\"text\">按钮</Button>\n          <Button type=\"dashed\">按钮</Button>\n          <Button disabled>按钮</Button>\n          <Button radius>按钮</Button>\n        </div>\n      </div>\n      <div className=\"perEg\">\n        <Title level={4}>不同大小:</Title>\n        <div className=\"showEg\" style={{ alignItems: 'center' }}>\n          <div>\n            <Button type=\"primary\" size=\"big\">\n              big\n            </Button>\n          </div>\n          <div>\n            <Button type=\"primary\" size=\"normal\">\n              normal\n            </Button>\n          </div>\n          <div>\n            <Button type=\"primary\" size=\"small\">\n              small\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className=\"perEg\">\n        <Title level={4}>加载中</Title>\n        <div className=\"showEg\" style={{ alignItems: 'center' }}>\n          <Button type=\"primary\" loading>\n            Loading\n          </Button>\n        </div>\n      </div>\n     </div>\n  )\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Button 按钮</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["Intro","level","Demo","className","type","disabled","radius","style","alignItems","size","loading","data","header","body","属性","说明","类型","默认值","ApiIntro","code","translate","CodeShow","marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","dangerouslySetInnerHTML","__html","breaks","example"],"sourceRoot":""}