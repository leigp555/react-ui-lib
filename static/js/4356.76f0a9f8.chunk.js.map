{"version":3,"file":"static/js/4356.76f0a9f8.chunk.js","mappings":"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","sources":["eg/CodeShow.tsx","eg/SkeletonEg/Intro.tsx","eg/SkeletonEg/Demo.tsx","eg/SkeletonEg/ApiIntro.tsx","eg/SkeletonEg/code.tsx","eg/SkeletonEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>在需要等待加载内容的位置提供一个占位图形组合。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>Skeleton: 主要组件</li>\n          <li>SkeletonItem: 子组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>网络较慢，需要长时间等待加载处理的情况下。</li>\n          <li>图文信息内容较多的列表/卡片中。</li>\n          <li>只在第一次加载数据的时候使用。</li>\n          <li>\n            可以被 Spin 完全代替，但是在可用的场景下可以比 Spin 提供更好的视觉效果和用户体验。\n          </li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React, { useState } from 'react';\nimport { Button, Skeleton, SkeletonItem } from '../../lib';\n\nexport const Demo: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loading2, setLoading2] = useState<boolean>(true);\n  const wrapCss: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '30px'\n  };\n  return (\n    <div className=\"Eg\">\n      <div style={wrapCss}>\n        <div>\n          <Button onClick={() => setLoading(!loading)}>{loading ? '正在加载' : '已加载'}</Button>\n        </div>\n\n        <Skeleton loading={loading}>\n          <SkeletonItem height={60} span={50} offset={20} />\n          <SkeletonItem span={50} offset={10} />\n          <SkeletonItem span={50} offset={10} />\n          <SkeletonItem span={50} offset={10} />\n        </Skeleton>\n      </div>\n      <div style={wrapCss}>\n        <div>\n          <Button onClick={() => setLoading2(!loading2)}>{loading2 ? '正在加载' : '已加载'}</Button>\n        </div>\n        <Skeleton loading={loading2}>\n          <SkeletonItem span={20} offset={0} />\n          <SkeletonItem span={80} offset={0} />\n          <SkeletonItem span={60} offset={0} />\n          <SkeletonItem span={100} offset={0} />\n        </Skeleton>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table, Title } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst TextBody = [\n  { 属性: 'gap', 说明: '骨架间距', 类型: 'number', 默认值: '10' },\n  { 属性: 'loading', 说明: '是否显示骨架图', 类型: 'boolean', 默认值: 'true' }\n];\nconst TextData: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: TextBody\n};\n\nconst TitleBody = [\n  { 属性: 'span', 说明: '宽度百分比', 类型: 'number', 默认值: '100' },\n  { 属性: 'offset', 说明: '向右偏移量', 类型: 'number', 默认值: '0' },\n  { 属性: 'height', 说明: '骨架高度', 类型: 'number', 默认值: '20' }\n];\nconst TitleData: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: TitleBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Title level={4}>Skeleton</Title>\n      <Table data={TextData} />\n      <Title level={4}>SkeletonItem</Title>\n      <Table data={TitleData} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport {  Button, Skeleton, SkeletonItem } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loading2, setLoading2] = useState<boolean>(true);\n  const wrapCss: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '30px'\n  };\n  return (\n    <div className=\"Eg\">\n      <div style={wrapCss}>\n        <div>\n          <Button onClick={() => setLoading(!loading)}>{loading ? '正在加载' : '已加载'}</Button>\n        </div>\n\n        <Skeleton loading={loading}>\n          <SkeletonItem height={60} span={50} offset={20} />\n          <SkeletonItem span={50} offset={10} />\n          <SkeletonItem span={50} offset={10} />\n          <SkeletonItem span={50} offset={10} />\n        </Skeleton>\n      </div>\n      <div style={wrapCss}>\n        <div>\n          <Button onClick={() => setLoading2(!loading2)}>{loading2 ? '正在加载' : '已加载'}</Button>\n        </div>\n        <Skeleton loading={loading2}>\n          <SkeletonItem span={20} offset={0} />\n          <SkeletonItem span={80} offset={0} />\n          <SkeletonItem span={60} offset={0} />\n          <SkeletonItem span={100} offset={0} />\n        </Skeleton>\n      </div>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Skeleton 骨架</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","Demo","useState","loading","setLoading","loading2","setLoading2","wrapCss","display","flexDirection","gap","style","onClick","height","span","offset","TextData","header","body","属性","说明","类型","默认值","TitleData","ApiIntro","data","translate","example"],"sourceRoot":""}