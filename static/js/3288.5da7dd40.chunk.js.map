{"version":3,"file":"static/js/3288.5da7dd40.chunk.js","mappings":"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","sources":["eg/CodeShow.tsx","eg/GridEg/Intro.tsx","eg/GridEg/Demo.tsx","eg/GridEg/ApiIntro.tsx","eg/GridEg/code.tsx","eg/GridEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>100 栅格系统。</p>\n      </Paragraph>\n      <Title level={3}>组件概述</Title>\n      <Paragraph>\n        <ul>\n          <li>Col：横向布局</li>\n          <li>Row：纵向布局</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <p>我们将整个设计建议区域按照 100 等分的原则进行划分。便于快速对区域进行横向布局</p>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React from 'react';\nimport { Col, Row } from '../../lib';\n\nexport const Demo: React.FC = () => {\n  return (\n    <div className=\"Eg\">\n      <Row height={40}>\n        <Col justify=\"center\" style={{ backgroundColor: 'orange' }}>\n          100%\n        </Col>\n      </Row>\n      <Row height={40}>\n        <Col span={30} offset=\"auto\" justify=\"center\" style={{ backgroundColor: 'orange' }}>\n          30%\n        </Col>\n      </Row>\n      <Row gap={5} height={40}>\n        <Col justify=\"center\" span={50} style={{ backgroundColor: 'orange' }}>\n          50%\n        </Col>\n        <Col span={15} style={{ backgroundColor: 'red' }} />\n        <Col span={15} style={{ backgroundColor: 'red' }} />\n        <Col span={15} style={{ backgroundColor: 'red' }} />\n      </Row>\n      <Row justify=\"end\" height={20}>\n        <Col span={5} style={{ backgroundColor: 'red' }} />\n        <Col span={5} offset={1} style={{ backgroundColor: 'blue' }} />\n        <Col span={5} style={{ backgroundColor: 'blue' }} />\n        <Col span={50} style={{ backgroundColor: 'blue' }} />\n      </Row>\n      <Row aline=\"center\" height={120}>\n        <Col span={25} offset={1} style={{ backgroundColor: 'red', height: '20px' }} />\n        <Col span={15} offset={1} style={{ backgroundColor: 'red', height: '100px' }} />\n      </Row>\n      <Row gap={20} justify=\"space-between\" height={20}>\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n      </Row>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table, Title } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst RowBody = [\n  { 属性: 'height', 说明: '头部高度', 类型: 'number|string', 默认值: '100%' },\n  { 属性: 'gap', 说明: '垂直间距', 类型: 'number', 默认值: '0' },\n  { 属性: 'bgc', 说明: '背景颜色', 类型: 'string', 默认值: 'inherit' },\n  { 属性: 'color', 说明: '字体颜色', 类型: 'string', 默认值: 'inherit' },\n  { 属性: 'direction', 说明: '纵向或横向排列', 类型: 'row | column', 默认值: 'row' },\n  {\n    属性: 'justify',\n    说明: '对齐方式',\n    类型: ` 'center' | 'start' | 'end' | 'space-between' | 'space-around'`,\n    默认值: 'start'\n  },\n  {\n    属性: 'aline',\n    说明: '对齐方式',\n    类型: ` 'center' | 'start' | 'end' | 'space-between' | 'space-around'`,\n    默认值: 'center'\n  }\n];\nconst RowData: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: RowBody\n};\n\nconst ColBody = [\n  { 属性: 'span', 说明: '宽度百分比', 类型: 'number', 默认值: '100' },\n  { 属性: 'offset', 说明: '向右偏移百分比', 类型: 'number | \"auto\"', 默认值: '0' },\n  { 属性: 'gap', 说明: '垂直间距', 类型: 'number', 默认值: '0' },\n  { 属性: 'bgc', 说明: '背景颜色', 类型: 'string', 默认值: 'inherit' },\n  { 属性: 'color', 说明: '字体颜色', 类型: 'string', 默认值: 'inherit' },\n  { 属性: 'direction', 说明: '纵向或横向排列', 类型: 'row | column', 默认值: 'row' },\n  {\n    属性: 'justify',\n    说明: '对齐方式',\n    类型: ` 'center' | 'start' | 'end' | 'space-between' | 'space-around'`,\n    默认值: 'start'\n  },\n  {\n    属性: 'aline',\n    说明: '对齐方式',\n    类型: ` 'center' | 'start' | 'end' | 'space-between' | 'space-around'`,\n    默认值: 'center'\n  }\n];\nconst ColData: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: ColBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Title level={4}>Row</Title>\n      <Table data={RowData} />\n      <Title level={4}>Col</Title>\n      <Table data={ColData} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Row,Col } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  return (\n     <div>\n      <Row height={40}>\n        <Col justify=\"center\" style={{ backgroundColor: 'orange' }}>\n          100%\n        </Col>\n      </Row>\n      <Row height={40}>\n        <Col span={30} offset=\"auto\" justify=\"center\" style={{ backgroundColor: 'orange' }}>\n          30%\n        </Col>\n      </Row>\n      <Row gap={5} height={40}>\n        <Col justify=\"center\" span={50} style={{ backgroundColor: 'orange' }}>\n          50%\n        </Col>\n        <Col span={15} style={{ backgroundColor: 'red' }} />\n        <Col span={15} style={{ backgroundColor: 'red' }} />\n        <Col span={15} style={{ backgroundColor: 'red' }} />\n      </Row>\n      <Row justify=\"end\" height={20}>\n        <Col span={5} style={{ backgroundColor: 'red' }} />\n        <Col span={5} offset={1} style={{ backgroundColor: 'blue' }} />\n        <Col span={5} style={{ backgroundColor: 'blue' }} />\n        <Col span={50} style={{ backgroundColor: 'blue' }} />\n      </Row>\n      <Row aline=\"center\" height={120}>\n        <Col span={25} offset={1} style={{ backgroundColor: 'red', height: '20px' }} />\n        <Col span={15} offset={1} style={{ backgroundColor: 'red', height: '100px' }} />\n      </Row>\n      <Row gap={20} justify=\"space-between\" height={20}>\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n        <Col span={20} style={{ backgroundColor: 'red' }} />\n      </Row>\n     </div>\n  )\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Grid 栅格布局</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","Demo","height","justify","style","backgroundColor","span","offset","gap","aline","RowData","header","body","属性","说明","类型","默认值","ColData","ApiIntro","data","translate","example"],"sourceRoot":""}