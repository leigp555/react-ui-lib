{"version":3,"file":"static/js/9755.ba85c229.chunk.js","mappings":"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","sources":["eg/CodeShow.tsx","eg/PaginationEg/Intro.tsx","eg/PaginationEg/Demo.tsx","eg/PaginationEg/ApiIntro.tsx","eg/PaginationEg/code.tsx","eg/PaginationEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>采用分页的形式分隔长列表，每次只加载一个页面。</p>\n      </Paragraph>\n      <Title level={3}>组件概述</Title>\n      <Paragraph>\n        <ul>\n          <li>Pagination：主要组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>当加载/渲染所有数据将花费很多时间时；</li>\n          <li>可切换页码浏览数据。</li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React, { useState } from 'react';\nimport { Pagination } from '../../lib';\n\nexport const Demo: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n  const fn = (currentPage: number, start: number, end: number) => {\n    console.log(start, end);\n    setPage(currentPage);\n  };\n  return (\n    <div className=\"Eg\">\n      <Pagination callback={fn} defaultPage={page} totalSrc={10} perPage={5} />\n      <Pagination callback={fn} defaultPage={page} totalSrc={500} perPage={5} />\n      <Pagination callback={fn} defaultPage={page} totalSrc={500} perPage={5} />\n      <Pagination callback={fn} defaultPage={page} totalSrc={100} perPage={5} moreTool statistic />\n      <Pagination callback={fn} defaultPage={page} totalSrc={500} perPage={5} goTool />\n      <Pagination callback={fn} defaultPage={page} totalSrc={500} perPage={5} goTool moreTool />\n      <Pagination\n        callback={fn}\n        defaultPage={page}\n        totalSrc={500}\n        perPage={5}\n        goTool\n        moreTool\n        statistic\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [\n  { 属性: 'defaultPage', 说明: '默认为第几页', 类型: 'number', 默认值: '1' },\n  { 属性: 'perPage', 说明: '每页展示多少条数据', 类型: 'number', 默认值: '5' },\n  { 属性: 'moreTool', 说明: '快速翻页', 类型: 'boolean', 默认值: 'false' },\n  { 属性: 'goTool', 说明: '允许输入页码', 类型: 'boolean', 默认值: 'false' },\n  { 属性: 'statistic', 说明: '数据统计', 类型: 'boolean', 默认值: 'false' },\n  {\n    属性: 'callback',\n    说明: '翻页时执行的回调函数',\n    类型: '接受三个参数（currentPage:number, start: number, end: number）',\n    默认值: 'null'\n  },\n  { 属性: 'totalSrc', 说明: '总共有多少条数据', 类型: 'number', 默认值: '必要项' }\n];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Pagination } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  const [page, setPage] = useState<number>(1);\n  const fn = (currentPage: number, start: number, end: number) => {\n    console.log(start, end);\n    setPage(currentPage);\n  };\n  return (\n     <div>\n        <Pagination callback={fn} defaultPage={page} totalSrc={10} perPage={5} />\n        <Pagination callback={fn} defaultPage={page} totalSrc={500} perPage={5} />\n        <Pagination callback={fn} defaultPage={page} totalSrc={500} perPage={5} />\n        <Pagination\n          callback={fn}\n          defaultPage={page}\n          totalSrc={100}\n          perPage={5}\n          moreTool\n          statistic\n        />\n        <Pagination callback={fn} defaultPage={page} totalSrc={500} perPage={5} goTool />\n        <Pagination callback={fn} defaultPage={page} totalSrc={500} perPage={5} goTool moreTool />\n        <Pagination\n          callback={fn}\n          defaultPage={page}\n          totalSrc={500}\n          perPage={5}\n          goTool\n          moreTool\n          statistic\n        />\n     </div>\n  )\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Pagination 分页</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","Demo","useState","page","setPage","fn","currentPage","start","end","console","log","callback","defaultPage","totalSrc","perPage","moreTool","statistic","goTool","data","header","body","属性","说明","类型","默认值","ApiIntro","translate","example"],"sourceRoot":""}