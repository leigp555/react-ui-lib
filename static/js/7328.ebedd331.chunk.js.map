{"version":3,"file":"static/js/7328.ebedd331.chunk.js","mappings":"qLAKAA,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAI1C,OACE,gBACEC,UAAU,WACVC,wBAAyB,CACvBC,QANGb,EAAAA,EAAAA,IAAOU,EAAM,CAAEI,QAAQ,MAUjC,C,qGC3BYC,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,UAAC,KAAD,YACE,mIACA,2BACE,0LACA,sJACA,4GACA,wHACA,4JAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,2BACE,iEACA,2EAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,sOAIP,E,SC1BKC,EAAQ,CACZ,CACEC,MAAO,qBACPC,QAAS,sBAEX,CACED,MAAO,qBACPC,QAAS,sBAEX,CACED,MAAO,qBACPC,QAAS,uBAIAC,EAAiB,WAC5B,OAA8BC,EAAAA,EAAAA,UAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OACE,gBAAKZ,UAAU,KAAf,UACE,iBAAKA,UAAU,MAAf,WACE,SAAC,KAAD,CAAOW,QAASA,EAAhB,SACGL,EAAMO,KAAI,SAACC,GAAD,OACT,SAAC,KAAD,CAAuBnB,MAAOmB,EAAKP,OAAxBO,EAAKP,MADP,OAIb,gBAAKP,UAAU,gBAAf,SAAgCM,EAAMK,GAASH,WAC/C,iBAAKR,UAAU,eAAf,UACGW,EAAU,IACT,SAAC,KAAD,CAAQI,MAAO,CAAEC,OAAQ,SAAWC,QAAS,WAbrDL,EAAWD,EAAU,EAagC,EAA7C,sBAIDA,IAAYL,EAAMY,OAAS,IAC1B,SAAC,KAAD,CAAQC,KAAK,UAAUF,QAAS,kBAAMG,EAAAA,EAAAA,IAAI,UAAW,uBAArB,EAAhC,kBAIDT,EAAUL,EAAMY,OAAS,IACxB,SAAC,KAAD,CAAQC,KAAK,UAAUF,QAAS,WA1BxCL,EAAWD,EAAU,EA0BmB,EAAhC,yBAQX,E,UCnDKU,EAAuB,CAC3BC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAHgB,CAAC,CAAEC,eAAI,UAAWC,eAAI,iCAASC,eAAI,SAAUC,qBAAK,OAO9DC,EAAsB,CAC1BN,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAHgB,CAAC,CAAEC,eAAI,QAASC,eAAI,iCAASC,eAAI,kBAAmBC,qBAAK,UAM9DE,EAAqB,WAChC,OACE,iBAAK7B,UAAU,YAAf,WACE,SAAC,KAAD,CAAOK,MAAO,EAAd,oBACA,SAAC,KAAD,CAAOyB,KAAMT,KACb,SAAC,KAAD,CAAOhB,MAAO,EAAd,mBACA,SAAC,KAAD,CAAOyB,KAAMF,MAGlB,ECvBY7B,G,SAAOgC,E,QAAAA,GAAU,k1DCsB9B,EAf0B,WACxB,OACE,iBAAK/B,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,uCACA,SAACI,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACI,EAAD,KACA,SAAC,KAAD,CAAOJ,MAAO,EAAd,uCACA,SAACP,EAAA,EAAD,CAAUC,KAAMA,KAChB,SAAC,KAAD,CAAOM,MAAO,EAAd,2BACA,SAACwB,EAAD,MAGL,C,uDCrBM,IAAME,EAAY,SAACC,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/CodeShow.tsx","eg/StepsEg/Intro.tsx","eg/StepsEg/Demo.tsx","eg/StepsEg/ApiIntro.tsx","eg/StepsEg/code.tsx","eg/StepsEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>引导用户按照流程完成任务的导航条。</p>\n        <ul>\n          <li>主按钮：用于主行动点，一个操作区域只能有一个主按钮。</li>\n          <li>默认按钮：用于没有主次之分的一组行动点。</li>\n          <li>虚线按钮：常用于添加操作。</li>\n          <li>文本按钮：用于最次级的行动点。</li>\n          <li>链接按钮：一般用于链接，即导航至某位置。</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>组件概述</Title>\n      <Paragraph>\n        <ul>\n          <li>steps：组件包裹</li>\n          <li>step：展示每一步</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <p>当任务复杂或者存在先后关系时，将其分解成一系列步骤，从而简化任务。</p>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React, { useState } from 'react';\nimport { Button, Step, Steps, Tip } from '../../lib';\nimport './index.scss';\n\nconst steps = [\n  {\n    title: '步骤一',\n    content: '内容一'\n  },\n  {\n    title: '步骤二',\n    content: '内容二'\n  },\n  {\n    title: '步骤三',\n    content: '内容三'\n  }\n];\n\nexport const Demo: React.FC = () => {\n  const [current, setCurrent] = useState(0);\n  const next = () => {\n    setCurrent(current + 1);\n  };\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n  return (\n    <div className=\"Eg\">\n      <div className=\"row\">\n        <Steps current={current}>\n          {steps.map((item) => (\n            <Step key={item.title} value={item.title} />\n          ))}\n        </Steps>\n        <div className=\"steps-content\">{steps[current].content}</div>\n        <div className=\"steps-action\">\n          {current > 0 && (\n            <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n              Previous\n            </Button>\n          )}\n          {current === steps.length - 1 && (\n            <Button type=\"primary\" onClick={() => Tip('success', 'Processing complete!')}>\n              Done\n            </Button>\n          )}\n          {current < steps.length - 1 && (\n            <Button type=\"primary\" onClick={() => next()}>\n              Next\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table, Title } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst StepsBody = [{ 属性: 'current', 说明: '处于那一步', 类型: 'number', 默认值: '0' }];\nconst StepsData: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: StepsBody\n};\n\nconst TitleBody = [{ 属性: 'value', 说明: '步骤条信息', 类型: 'React.ReactNode', 默认值: 'null' }];\nconst StepData: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: TitleBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Title level={4}>Steps</Title>\n      <Table data={StepsData} />\n      <Title level={4}>Step</Title>\n      <Table data={StepData} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Steps,Step } from 'uix-react';\\n\n\nconst steps = [\n  {\n    title: '步骤一',\n    content: '内容一'\n  },\n  {\n    title: '步骤二',\n    content: '内容二'\n  },\n  {\n    title: '步骤三',\n    content: '内容三'\n  }\n];\n  \nexport const App:React.RC=()=>{\n  const [current, setCurrent] = useState(0);\n  const next = () => {\n    setCurrent(current + 1);\n  };\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n  return (\n          <div className=\"row\">\n            <Steps current={current}>\n              {steps.map((item) => (\n                <Step key={item.title} value={item.title} />\n              ))}\n            </Steps>\n            <div className=\"steps-content\">{steps[current].content}</div>\n            <div className=\"steps-action\">\n              {current > 0 && (\n                <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n                  Previous\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button type=\"primary\" onClick={() => Tip('success', 'Processing complete!')}>\n                  Done\n                </Button>\n              )}\n              {current < steps.length - 1 && (\n                <Button type=\"primary\" onClick={() => next()}>\n                  Next\n                </Button>\n              )}\n            </div>\n          </div>\n         )\n    }\n    \n    \n   //css\n  .row {\n    width: 100%;\n    \n  .steps-content {\n    min-height: 200px;\n    margin-top: 16px;\n    padding-top: 80px;\n    text-align: center;\n    background-color: #fafafa;\n    border: 1px dashed #e9e9e9;\n    border-radius: 2px;\n  }\n\n  .steps-action {\n    margin-top: 24px;\n    display: flex;\n    justify-content: center;\n  }\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Steps 步骤条</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","steps","title","content","Demo","useState","current","setCurrent","map","item","style","margin","onClick","length","type","Tip","StepsData","header","body","属性","说明","类型","默认值","StepData","ApiIntro","data","translate","example"],"sourceRoot":""}