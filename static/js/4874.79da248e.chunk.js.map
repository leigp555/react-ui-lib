{"version":3,"file":"static/js/4874.79da248e.chunk.js","mappings":"0LAGaA,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,uDAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,oEAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,2BACE,wHACA,0ZAQT,E,SCxBYC,EAAiB,WAC5B,IAAMC,EAAqB,CACzB,CAAEC,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,SAE1B,GAA8BC,EAAAA,EAAAA,UAAmB,CAAC,UAAlD,eAAOC,EAAP,KAAgBC,EAAhB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIJ,EACb,GAAE,CAACA,KAEF,iBAAKK,UAAU,KAAf,WACE,0BACE,SAAC,KAAD,CAAUT,QAASA,EAASI,QAASA,EAASC,WAAYA,OAE5D,iBAAKK,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAApC,WACE,SAAC,KAAD,CACEC,QAAS,WACPN,QAAQC,IAAIJ,EACb,EAHH,2BAOA,SAAC,KAAD,CACES,QAAS,WACP,IAAMC,EAAMd,EAAQe,QAAO,SAACC,EAAQC,GAElC,OADAD,EAAOE,KAAKD,EAAKf,OACVc,CACR,GAAE,IACHX,EAAWS,EACZ,EAPH,wBAWA,SAAC,KAAD,CACED,QAAS,WACPR,EAAW,GACZ,EAHH,2BAQF,0BACE,SAAC,KAAD,CACEL,QAASA,EACTI,QAASA,EACTC,WAAYA,EACZK,MAAO,CAAES,cAAe,SAAUP,IAAK,aAKhD,E,UCnDKQ,EAAkB,CACtBC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAPe,CACf,CAAEC,eAAI,UAAWC,eAAI,2BAAQC,eAAI,QAASC,qBAAK,MAC/C,CAAEH,eAAI,UAAWC,eAAI,uCAAUC,eAAI,QAASC,qBAAK,MACjD,CAAEH,eAAI,aAAcC,eAAI,2BAAQC,eAAI,qCAAsCC,qBAAK,MAOpEC,EAAqB,WAChC,OACE,gBAAKlB,UAAU,YAAf,UACE,SAAC,KAAD,CAAOW,KAAMA,KAGlB,EClBYQ,G,SAAOC,E,QAAAA,GAAU,yiDCsB9B,EAf0B,WACxB,OACE,iBAAKpB,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,0CACA,SAACZ,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACC,EAAD,KACA,SAAC,KAAD,CAAOD,MAAO,EAAd,uCACA,SAACgC,EAAA,EAAD,CAAUF,KAAMA,KAChB,SAAC,KAAD,CAAO9B,MAAO,EAAd,2BACA,SAAC6B,EAAD,MAGL,C,gGCjBDI,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYjC,KAC1C,EACDmC,WAAY,iBACZC,KAAK,IAOA,IAAMR,EAA4B,SAAC,GAAc,IAAZF,EAAW,EAAXA,KAI1C,OACE,gBACEnB,UAAU,WACV8B,wBAAyB,CACvBC,QANGT,EAAAA,EAAAA,IAAOH,EAAM,CAAEa,QAAQ,MAUjC,C,uDC7BM,IAAMZ,EAAY,SAACa,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/CheckBoxEg/Intro.tsx","eg/CheckBoxEg/Demo.tsx","eg/CheckBoxEg/ApiIntro.tsx","eg/CheckBoxEg/code.tsx","eg/CheckBoxEg/index.tsx","eg/CodeShow.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>多选框。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>Checkbox: 主要组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>在一组可选项中进行多项选择时；</li>\n          <li>\n            单独使用可以表示两种状态之间的切换，和 switch 类似。区别在于切换 switch\n            会直接触发状态改变，而 checkbox 一般用于状态标记，需要和提交操作配合。\n          </li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Checkbox } from '../../lib';\nimport { Options } from '../../lib/Checkbox/Checkbox';\n\nexport const Demo: React.FC = () => {\n  const options: Options[] = [\n    { label: 'apple', value: 'apple' },\n    { label: 'pear', value: 'pear' },\n    { label: 'orange', value: 'orange' },\n    { label: 'yellow', value: 'yellow' },\n    { label: 'red', value: 'red' },\n    { label: 'black', value: 'black' },\n    { label: 'blue', value: 'blue' }\n  ];\n  const [checked, setChecked] = useState<string[]>(['apple']);\n  useEffect(() => {\n    console.log(checked);\n  }, [checked]);\n  return (\n    <div className=\"Eg\">\n      <div>\n        <Checkbox options={options} checked={checked} setChecked={setChecked} />\n      </div>\n      <div style={{ display: 'flex', gap: '20px' }}>\n        <Button\n          onClick={() => {\n            console.log(checked);\n          }}\n        >\n          log selected\n        </Button>\n        <Button\n          onClick={() => {\n            const arr = options.reduce((result, item) => {\n              result.push(item.value);\n              return result;\n            }, [] as string[]);\n            setChecked(arr);\n          }}\n        >\n          check all\n        </Button>\n        <Button\n          onClick={() => {\n            setChecked([]);\n          }}\n        >\n          clear all\n        </Button>\n      </div>\n      <div>\n        <Checkbox\n          options={options}\n          checked={checked}\n          setChecked={setChecked}\n          style={{ flexDirection: 'column', gap: '5px' }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [\n  { 属性: 'options', 说明: '选项数组', 类型: 'Array', 默认值: '[]' },\n  { 属性: 'checked', 说明: '已选中的选项', 类型: 'Array', 默认值: '[]' },\n  { 属性: 'setChecked', 说明: '修改选项', 类型: 'Dispatch<SetStateAction<string[]>>', 默认值: '' }\n];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Button, Checkbox } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  const options: Options[] = [\n    { label: 'apple', value: 'apple' },\n    { label: 'pear', value: 'pear' },\n    { label: 'orange', value: 'orange' },\n    { label: 'yellow', value: 'yellow' },\n    { label: 'red', value: 'red' },\n    { label: 'black', value: 'black' },\n    { label: 'blue', value: 'blue' }\n  ];\n  const [checked, setChecked] = useState<string[]>(['apple']);\n  useEffect(() => {\n    console.log(checked);\n  }, [checked]);\n  return (\n    <div className=\"Eg\">\n      <div>\n        <Checkbox options={options} checked={checked} setChecked={setChecked} />\n      </div>\n      <div style={{ display: 'flex', gap: '20px' }}>\n        <Button\n          onClick={() => {\n            console.log(checked);\n          }}\n        >\n          log selected\n        </Button>\n        <Button\n          onClick={() => {\n            const arr = options.reduce((result, item) => {\n              result.push(item.value);\n              return result;\n            }, [] as string[]);\n            setChecked(arr);\n          }}\n        >\n          check all\n        </Button>\n        <Button\n          onClick={() => {\n            setChecked([]);\n          }}\n        >\n          clear all\n        </Button>\n      </div>\n      <div>\n        <Checkbox\n          options={options}\n          checked={checked}\n          setChecked={setChecked}\n          style={{ flexDirection: 'column', gap: '5px' }}\n        />\n      </div>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">CheckBox 多选框</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["Intro","level","Demo","options","label","value","useState","checked","setChecked","useEffect","console","log","className","style","display","gap","onClick","arr","reduce","result","item","push","flexDirection","data","header","body","属性","说明","类型","默认值","ApiIntro","code","translate","CodeShow","marked","highlight","str","lang","language","hljs","langPrefix","gfm","dangerouslySetInnerHTML","__html","breaks","example"],"sourceRoot":""}