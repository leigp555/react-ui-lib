{"version":3,"file":"static/js/3109.791f44ad.chunk.js","mappings":"0LAGaA,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,2FAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,wEAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,2BACE,kHACA,uGAKT,E,mBCpBKC,EAAc,CAClB,CACEC,GAAI,EACJC,QAAS,OAEX,CACED,GAAI,EACJC,QAAS,OAEX,CACED,GAAI,EACJC,QAAS,OAEX,CACED,GAAI,EACJC,QAAS,OAEX,CACED,GAAI,EACJC,QAAS,OAEX,CACED,GAAI,EACJC,QAAS,OAEX,CACED,GAAI,EACJC,QAAS,OAEX,CACED,GAAI,EACJC,QAAS,OAEX,CACED,GAAI,EACJC,QAAS,OAEX,CACED,GAAI,GACJC,QAAS,OAEX,CACED,GAAI,GACJC,QAAS,OAEX,CACED,GAAI,GACJC,QAAS,QAIAC,EAAiB,WAC5B,OAA0BC,EAAAA,EAAAA,UAAiB,OAA3C,eAAOC,EAAP,KAAcC,EAAd,KAKA,OACE,gBAAKC,UAAU,KAAf,UACE,SAAC,KAAD,CACEP,KAAMA,EACNK,MAAOA,EACPG,SATK,SAACC,GACVC,QAAQC,IAAIF,GACZH,EAASG,EACV,EAOKG,MAAO,CAAEC,MAAO,QAASC,aAAc,SAJzC,UAME,SAAC,IAAD,CAAUD,MAAM,QAAQE,OAAO,QAAQH,MAAO,CAAEI,UAAW,uBAIlE,E,UCjEKC,EAAkB,CACtBC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAPe,CACf,CAAEC,eAAI,OAAQC,eAAI,2BAAQC,eAAI,WAAYC,qBAAK,MAC/C,CAAEH,eAAI,QAASC,eAAI,iCAASC,eAAI,SAAUC,qBAAK,IAC/C,CAAEH,eAAI,WAAYC,eAAI,+DAAcC,eAAI,WAAYC,qBAAK,MAO9CC,EAAqB,WAChC,OACE,gBAAKjB,UAAU,YAAf,UACE,SAAC,KAAD,CAAOU,KAAMA,KAGlB,EClBYQ,G,SAAOC,E,QAAAA,GAAU,2hCCsB9B,EAf0B,WACxB,OACE,iBAAKnB,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,oDACA,SAACT,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACI,EAAD,KACA,SAAC,KAAD,CAAOJ,MAAO,EAAd,uCACA,SAAC4B,EAAA,EAAD,CAAUF,KAAMA,KAChB,SAAC,KAAD,CAAO1B,MAAO,EAAd,2BACA,SAACyB,EAAD,MAGL,C,gGCjBDI,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAY3B,KAC1C,EACD6B,WAAY,iBACZC,KAAK,IAOA,IAAMR,EAA4B,SAAC,GAAc,IAAZF,EAAW,EAAXA,KAI1C,OACE,gBACElB,UAAU,WACV6B,wBAAyB,CACvBC,QANGT,EAAAA,EAAAA,IAAOH,EAAM,CAAEa,QAAQ,MAUjC,C,uDC7BM,IAAMZ,EAAY,SAACa,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/AutoCompleteEg/Intro.tsx","eg/AutoCompleteEg/Demo.tsx","eg/AutoCompleteEg/ApiIntro.tsx","eg/AutoCompleteEg/code.tsx","eg/AutoCompleteEg/index.tsx","eg/CodeShow.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>输入框自动完成功能。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>AutoComplete: 主要组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>需要一个输入框而不是选择器。</li>\n          <li>需要输入建议/辅助提示。</li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React, { useState } from 'react';\nimport { AutoComplete } from '../../lib';\nimport LeftIcon from '../../lib/icons/left2.svg';\nimport { Tip } from '../../lib/AutoComplete/AutoComplete';\n\nconst tips: Tip[] = [\n  {\n    id: 1,\n    message: 'xxx'\n  },\n  {\n    id: 2,\n    message: 'yyy'\n  },\n  {\n    id: 3,\n    message: 'zzz'\n  },\n  {\n    id: 4,\n    message: 'yyy'\n  },\n  {\n    id: 5,\n    message: 'yyy'\n  },\n  {\n    id: 6,\n    message: 'yyy'\n  },\n  {\n    id: 7,\n    message: 'yyy'\n  },\n  {\n    id: 8,\n    message: 'yyy'\n  },\n  {\n    id: 9,\n    message: 'yyy'\n  },\n  {\n    id: 10,\n    message: 'yyy'\n  },\n  {\n    id: 11,\n    message: 'yyy'\n  },\n  {\n    id: 12,\n    message: 'yyy'\n  }\n];\n\nexport const Demo: React.FC = () => {\n  const [value, setValue] = useState<string>('111');\n  const fn = (selected: string) => {\n    console.log(selected);\n    setValue(selected);\n  };\n  return (\n    <div className=\"Eg\">\n      <AutoComplete\n        tips={tips}\n        value={value}\n        callback={fn}\n        style={{ width: '200px', marginBottom: '100px' }}\n      >\n        <LeftIcon width=\"0.8em\" height=\"0.8em\" style={{ transform: 'rotate(-90deg)' }} />\n      </AutoComplete>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [\n  { 属性: 'tips', 说明: '提示内容', 类型: 'string[]', 默认值: '[]' },\n  { 属性: 'value', 说明: '输入框内容', 类型: 'string', 默认值: '' },\n  { 属性: 'callback', 说明: '点击提示内容后的回调', 类型: 'Function', 默认值: '' }\n];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { AutoComplete } from 'uix-react';\\n\n\nconst tips: Tip[] = [\n  {\n    id: 1,\n    message: 'xxx'\n  },\n  {\n    id: 2,\n    message: 'yyy'\n  },\n  {\n    id: 3,\n    message: 'zzz'\n  },\n  {\n    id: 4,\n    message: 'yyy'\n  },\n  {\n    id: 5,\n    message: 'yyy'\n  },\n  {\n    id: 6,\n    message: 'yyy'\n  },\n  {\n    id: 7,\n    message: 'yyy'\n  },\n  {\n    id: 8,\n    message: 'yyy'\n  },\n  {\n    id: 9,\n    message: 'yyy'\n  },\n  {\n    id: 10,\n    message: 'yyy'\n  },\n  {\n    id: 11,\n    message: 'yyy'\n  },\n  {\n    id: 12,\n    message: 'yyy'\n  }\n];\nexport const App:React.RC=()=>{\n  const [value, setValue] = useState<string>('111');\n  const fn = (selected: string) => {\n    console.log(selected);\n    setValue(selected);\n  };\n  return (\n    <div className=\"Eg\">\n      <AutoComplete tips={tips} value={value} callback={fn} style={{ width: '200px' }}>\n        <LeftIcon width=\"0.8em\" height=\"0.8em\" style={{ transform: 'rotate(-90deg)' }} />\n      </AutoComplete>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">AutoComplete 自动完成</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["Intro","level","tips","id","message","Demo","useState","value","setValue","className","callback","selected","console","log","style","width","marginBottom","height","transform","data","header","body","属性","说明","类型","默认值","ApiIntro","code","translate","CodeShow","marked","highlight","str","lang","language","hljs","langPrefix","gfm","dangerouslySetInnerHTML","__html","breaks","example"],"sourceRoot":""}