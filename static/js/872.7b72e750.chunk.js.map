{"version":3,"file":"static/js/872.7b72e750.chunk.js","mappings":"oLAKAA,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAI1C,OACE,gBACEC,UAAU,WACVC,wBAAyB,CACvBC,QANGb,EAAAA,EAAAA,IAAOU,EAAM,CAAEI,QAAQ,MAUjC,C,kGC3BYC,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,qOAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,2BACE,sJACA,iKAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,UAAC,KAAD,YACE,uZAGA,2BACE,gGACA,8HAKT,ECzBKC,EAAc,CAClB,CACEC,GAAI,EACJC,SAAS,iBAAMC,MAAO,CAAEC,MAAO,OAAtB,0BAEX,CACEH,GAAI,EACJC,QAAS,8BAEX,CACED,GAAI,EACJC,SAAS,iBAAMC,MAAO,CAAEC,MAAO,WAAtB,gCAEX,CACEH,GAAI,EACJC,QAAS,gBAIAG,EAAiB,WAC5B,OACE,gBAAKX,UAAU,KAAf,UACE,gBAAKA,UAAU,SAAf,UACE,SAAC,KAAD,CAAUM,KAAMA,EAAhB,UACE,SAAC,KAAD,uBAKT,E,UC5BKM,EAA0B,CAC9BC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAHmB,CAAC,CAAEC,eAAI,OAAQC,eAAI,2BAAQC,eAAI,MAAOC,qBAAK,MAMnDC,EAAqB,WAChC,OACE,iBAAKnB,UAAU,YAAf,WACE,SAAC,KAAD,CAAOK,MAAO,EAAd,uBACA,SAAC,KAAD,CAAOe,KAAMR,MAGlB,ECfYb,G,SAAOsB,E,QAAAA,GAAU,qmBCsB9B,EAf0B,WACxB,OACE,iBAAKrB,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,gDACA,SAACI,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACM,EAAD,KACA,SAAC,KAAD,CAAON,MAAO,EAAd,uCACA,SAACP,EAAA,EAAD,CAAUC,KAAMA,KAChB,SAAC,KAAD,CAAOM,MAAO,EAAd,2BACA,SAACc,EAAD,MAGL,C,uDCrBM,IAAME,EAAY,SAACC,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/CodeShow.tsx","eg/DropdownEg/Intro.tsx","eg/DropdownEg/Demo.tsx","eg/DropdownEg/ApiIntro.tsx","eg/DropdownEg/code.tsx","eg/DropdownEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>一组可收起展开的列表或动作，用于过滤、排序，或将动作折叠到菜单中。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>使用导航菜单可以快速在网站的页面间跳转。</li>\n          <li>导航同级之间在逻辑上需为并列且互斥的关系。</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <p>\n          当页面上的操作命令过多时，用此组件可以收纳操作元素。点击或移入触点，会出现一个下拉菜单。可在列表中进行选择，并执行相应的命令。\n        </p>\n        <ul>\n          <li>用于收罗一组命令操作。</li>\n          <li>Select 用于选择，而 Dropdown 是命令集合。</li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React from 'react';\nimport { Dropdown, Button } from '../../lib';\nimport { Tip } from '../../lib/Dropdown/Dropdown ';\n\nconst tips: Tip[] = [\n  {\n    id: 1,\n    message: <span style={{ color: 'red' }}>Lorem ipsum</span>\n  },\n  {\n    id: 2,\n    message: 'Lorem ipsum dolor sit amet'\n  },\n  {\n    id: 3,\n    message: <span style={{ color: '#1890ff' }}>Lorem ipsum dolor</span>\n  },\n  {\n    id: 4,\n    message: 'Lorem ipsum'\n  }\n];\n\nexport const Demo: React.FC = () => {\n  return (\n    <div className=\"Eg\">\n      <div className=\"showEg\">\n        <Dropdown tips={tips}>\n          <Button>xxx</Button>\n        </Dropdown>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table, Title } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst DropdownBody = [{ 属性: 'tips', 说明: '下拉内容', 类型: 'Tip', 默认值: '' }];\nconst DropdownData: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: DropdownBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Title level={4}>Dropdown</Title>\n      <Table data={DropdownData} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport {  Dropdown, Button } from 'uix-react';\\n\n\nconst tips: Tip[] = [\n  {\n    id: 1,\n    message: <span style={{ color: 'red' }}>Lorem ipsum</span>\n  },\n  {\n    id: 2,\n    message: 'Lorem ipsum dolor sit amet'\n  },\n  {\n    id: 3,\n    message: <span style={{ color: '#1890ff' }}>Lorem ipsum dolor</span>\n  },\n  {\n    id: 4,\n    message: 'Lorem ipsum'\n  }\n];\nexport const App:React.RC=()=>{\n  return (\n    <div className=\"Eg\">\n      <div className=\"showEg\">\n        <Dropdown tips={tips}>\n          <Button>xxx</Button>\n        </Dropdown>\n      </div>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Dropdown 下拉菜单</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","tips","id","message","style","color","Demo","DropdownData","header","body","属性","说明","类型","默认值","ApiIntro","data","translate","example"],"sourceRoot":""}