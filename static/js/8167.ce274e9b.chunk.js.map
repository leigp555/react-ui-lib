{"version":3,"file":"static/js/8167.ce274e9b.chunk.js","mappings":"qLAKAA,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAI1C,OACE,gBACEC,UAAU,WACVC,wBAAyB,CACvBC,QANGb,EAAAA,EAAAA,IAAOU,EAAM,CAAEI,QAAQ,MAUjC,C,mGC3BYC,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,mHAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,2BACE,8DACA,iFAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,2BACE,kHACA,sGACA,sGAKT,ECvBYC,EAAiB,WAE5B,IAAMC,EAAW,SAACC,GAChBC,QAAQC,IAAIF,IACZG,EAAAA,EAAAA,IAAI,UAAD,2BACJ,EAEKC,EAAa,SAACC,GAClBJ,QAAQC,IAAIG,EACb,EAEKC,EAAa,YACjBH,EAAAA,EAAAA,IAAI,QAAD,2BACJ,EAOD,OACE,iBAAKX,UAAU,KAAf,WACE,SAAC,KAAD,CAAgBe,MAAO,CAAEC,OAAQ,SAAWC,OAPvC,CACLC,UAAU,EACVC,OAAQ,sCAMR,SAAC,KAAD,CACEJ,MAAO,CAAEC,OAAQ,SACjBT,SAAUA,EACVK,WAAYA,EACZE,WAAYA,EACZM,OAAQ,UACRC,IAAI,yDACJH,UAAQ,KAEV,SAAC,KAAD,CACEH,MAAO,CAAEC,OAAQ,SACjBT,SAAUA,EACVK,WAAYA,EACZE,WAAYA,MAInB,E,UChCKN,EAAkB,CACtBc,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAVe,CACf,CAAEC,eAAI,WAAYC,eAAI,mDAAYC,eAAI,WAAYC,qBAAK,QACvD,CAAEH,eAAI,aAAcC,eAAI,6CAAgBC,eAAI,WAAYC,qBAAK,QAC7D,CAAEH,eAAI,aAAcC,eAAI,yDAAaC,eAAI,WAAYC,qBAAK,QAC1D,CAAEH,eAAI,SAAUC,eAAI,6CAAWC,eAAI,SAAUC,qBAAK,KAClD,CAAEH,eAAI,WAAYC,eAAI,uCAAUC,eAAI,UAAWC,qBAAK,SACpD,CAAEH,eAAI,MAAOC,eAAI,yDAAaC,eAAI,SAAUC,qBAAK,4DAU7CC,EAAgC,CACpCN,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAL6B,CAC7B,CAAEC,eAAI,SAAUC,eAAI,2BAAQC,eAAI,SAAUC,qBAAK,UAOpCE,EAAqB,WAChC,OACE,iBAAK7B,UAAU,YAAf,WACE,SAAC,KAAD,CAAOK,MAAO,EAAd,qBACA,SAAC,KAAD,CAAOG,KAAMA,KACb,SAAC,KAAD,CAAOH,MAAO,EAAd,6BACA,SAAC,KAAD,CAAOG,KAAMoB,MAGlB,EChCY7B,G,SAAO+B,E,QAAAA,GAAU,k2CCsB9B,EAf0B,WACxB,OACE,iBAAK9B,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,kCACA,SAACI,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACC,EAAD,KACA,SAAC,KAAD,CAAOD,MAAO,EAAd,uCACA,SAACP,EAAA,EAAD,CAAUC,KAAMA,KAChB,SAAC,KAAD,CAAOM,MAAO,EAAd,2BACA,SAACwB,EAAD,MAGL,C,uDCrBM,IAAMC,EAAY,SAACC,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/CodeShow.tsx","eg/UploadEg/Intro.tsx","eg/UploadEg/Demo.tsx","eg/UploadEg/ApiIntro.tsx","eg/UploadEg/code.tsx","eg/UploadEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>文件选择上传和拖拽上传控件。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>Upload: 主要组件</li>\n          <li>UploadToServer: 主要组件。</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>当需要上传一个或一些文件时。</li>\n          <li>当需要展现上传的进度时。</li>\n          <li>当需要使用拖拽交互时。</li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React from 'react';\nimport { Tip, Upload, UploadToServer } from '../../lib';\nimport { Config } from '../../lib/Upload/UploadToServer';\n\nexport const Demo: React.FC = () => {\n  // 获取源文件\n  const getFiles = (data: Blob[]) => {\n    console.log(data);\n    Tip('success', `获取成功`);\n  };\n  // 如果上传的是图片文件可以通过这个回调获取图片的base64信息\n  const getImgUrls = (urls: string[]) => {\n    console.log(urls);\n  };\n  // 获取图片base64信息失败将执行这个回调\n  const getUrlFail = () => {\n    Tip('error', `获取失败`);\n  };\n  const config = (): Config => {\n    return {\n      multiple: true,\n      action: 'http://localhost:8000/v1/upload'\n    };\n  };\n  return (\n    <div className=\"Eg\">\n      <UploadToServer style={{ height: '200px' }} config={config()} />\n      <Upload\n        style={{ height: '200px' }}\n        getFiles={getFiles}\n        getImgUrls={getImgUrls}\n        getUrlFail={getUrlFail}\n        accept={'image/*'}\n        tip=\"点击或拖拽上传图片\"\n        multiple\n      />\n      <Upload\n        style={{ height: '200px' }}\n        getFiles={getFiles}\n        getImgUrls={getImgUrls}\n        getUrlFail={getUrlFail}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table, Title } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [\n  { 属性: 'getFiles', 说明: '获取上传文件内容', 类型: 'Function', 默认值: 'null' },\n  { 属性: 'getImgUrls', 说明: '获取上传图片base64', 类型: 'Function', 默认值: 'null' },\n  { 属性: 'getUrlFail', 说明: '上传失败的回调函数', 类型: 'Function', 默认值: 'null' },\n  { 属性: 'accept', 说明: '上传的内容类型', 类型: 'string', 默认值: '*' },\n  { 属性: 'multiple', 说明: '是否可以多选', 类型: 'boolean', 默认值: 'false' },\n  { 属性: 'tip', 说明: '上传界面显示的文本', 类型: 'string', 默认值: '点击或拖拽上传文件' }\n];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nconst UploadToServerDataBody = [\n  { 属性: 'config', 说明: '上传配置', 类型: 'Config', 默认值: 'null' }\n];\nconst UploadToServerData: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: UploadToServerDataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Title level={4}>Upload</Title>\n      <Table data={data} />\n      <Title level={4}>UploadToServer</Title>\n      <Table data={UploadToServerData} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Tip, Upload, UploadToServer } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  // 获取源文件\n  const getFiles = (data: Blob[]) => {\n    console.log(data);\n    Tip('success', \\`获取成功\\`);\n  };\n  // 如果上传的是图片文件可以通过这个回调获取图片的base64信息\n  const getImgUrls = (urls: string[]) => {\n    console.log(urls);\n  };\n  // 获取图片base64信息失败将执行这个回调\n  const getUrlFail = () => {\n    Tip('error', \\`获取失败\\`);\n  };\n  const config = (): Config => {\n    return {\n      multiple: true,\n      action: 'http://localhost:8000/v1/upload'\n    };\n  };\n  return (\n    <div className=\"Eg\">\n      <UploadToServer style={{ height: '200px' }} config={config()} />\n      <Upload\n        style={{ height: '200px' }}\n        getFiles={getFiles}\n        getImgUrls={getImgUrls}\n        getUrlFail={getUrlFail}\n        accept={'image/*'}\n        tip=\"点击或拖拽上传图片\"\n        multiple\n      />\n      <Upload\n        style={{ height: '200px' }}\n        getFiles={getFiles}\n        getImgUrls={getImgUrls}\n        getUrlFail={getUrlFail}\n      />\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Button 按钮</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","Demo","getFiles","data","console","log","Tip","getImgUrls","urls","getUrlFail","style","height","config","multiple","action","accept","tip","header","body","属性","说明","类型","默认值","UploadToServerData","ApiIntro","translate","example"],"sourceRoot":""}