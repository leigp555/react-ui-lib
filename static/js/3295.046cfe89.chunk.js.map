{"version":3,"file":"static/js/3295.046cfe89.chunk.js","mappings":"wLAGaA,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,mHAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,oEAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,gSAOT,ECvBYC,EAAiB,WAI5B,OACE,gBAAKC,UAAU,KAAf,UACE,gBAAKC,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAAtC,UACE,SAAC,IAAD,CAAUC,SANL,SAACC,GACVC,QAAQC,IAAIF,EACb,OAQF,E,UCFKG,EAAkB,CACtBC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAVe,CACf,CACEC,eAAI,WACJC,eAAI,mDACJC,eAAI,8BACJC,qBAAK,MAQIC,EAAqB,WAChC,OACE,gBAAKf,UAAU,YAAf,UACE,SAAC,KAAD,CAAOQ,KAAMA,KAGlB,ECrBYQ,G,SAAOC,E,QAAAA,GAAU,wVCsB9B,EAf0B,WACxB,OACE,iBAAKjB,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,oCACA,SAACH,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACC,EAAD,KACA,SAAC,KAAD,CAAOD,MAAO,EAAd,uCACA,SAACoB,EAAA,EAAD,CAAUF,KAAMA,KAChB,SAAC,KAAD,CAAOlB,MAAO,EAAd,2BACA,SAACiB,EAAD,MAGL,C,gGCjBDI,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMT,EAA4B,SAAC,GAAc,IAAZF,EAAW,EAAXA,KAI1C,OACE,gBACEhB,UAAU,WACV4B,wBAAyB,CACvBC,QANGV,EAAAA,EAAAA,IAAOH,EAAM,CAAEc,QAAQ,MAUjC,C,uDC7BM,IAAMb,EAAY,SAACc,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/CalendarEg/Intro.tsx","eg/CalendarEg/Demo.tsx","eg/CalendarEg/ApiIntro.tsx","eg/CalendarEg/code.tsx","eg/CalendarEg/index.tsx","eg/CodeShow.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>按照日历形式展示数据的容器。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>Calendar: 主要组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>\n            当数据是日期或按照日期划分时，例如日程、课表、价格日历等，农历等。目前支持年/月切换。\n          </li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React from 'react';\nimport { Calendar } from '../../lib';\n\nexport const Demo: React.FC = () => {\n  const fn = (dataValue: string) => {\n    console.log(dataValue);\n  };\n  return (\n    <div className=\"Eg\">\n      <div style={{ width: '300px', height: '280px' }}>\n        <Calendar callback={fn} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [\n  {\n    属性: 'callback',\n    说明: '点击日期后的回调',\n    类型: '(dataValue: string) => void',\n    默认值: ''\n  }\n];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Calendar } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  const fn = (dataValue: string) => {\n    console.log(dataValue);\n  };\n  return (\n    <div className=\"Eg\">\n      <div className=\"showEg\" style={{ width: '300px', height: '300px' }}>\n        <Calendar callback={fn} />\n      </div>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Calendar 日历</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["Intro","level","Demo","className","style","width","height","callback","dataValue","console","log","data","header","body","属性","说明","类型","默认值","ApiIntro","code","translate","CodeShow","marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","dangerouslySetInnerHTML","__html","breaks","example"],"sourceRoot":""}