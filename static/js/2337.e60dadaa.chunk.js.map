{"version":3,"file":"static/js/2337.e60dadaa.chunk.js","mappings":"wLAGaA,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,yHAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,iEAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,2BACE,gJACA,oOAKT,E,UCrBYC,EAAiB,WAC5B,OACE,iBAAKC,UAAU,KAAf,WACE,SAAC,KAAD,CAAOC,KAAK,UAAZ,UACE,gEAEF,SAAC,KAAD,CAAOA,KAAK,OAAZ,UACE,6DAEF,SAAC,KAAD,CAAOA,KAAK,UAAZ,UACE,gEAEF,SAAC,KAAD,CAAOA,KAAK,QAAZ,UACE,8DAEF,SAAC,KAAD,CAAOA,KAAK,QAAZ,UACE,gEAEF,SAAC,KAAD,CAAOC,YAAY,SAAC,IAAD,CAAaC,MAAM,QAAQC,OAAO,UAArD,UACE,wRAMF,SAAC,KAAD,CAAOH,KAAK,UAAZ,UACE,iEAIP,E,UCrBKI,EAAkB,CACtBC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAXe,CACf,CACEC,eAAI,OACJC,eAAI,oBACJC,eAAG,uDACHC,qBAAK,WAEP,CAAEH,eAAI,aAAcC,eAAI,iCAASC,eAAI,kBAAmBC,qBAAK,MAOlDC,EAAqB,WAChC,OACE,gBAAKZ,UAAU,YAAf,UACE,SAAC,KAAD,CAAOK,KAAMA,KAGlB,ECtBYQ,G,SAAOC,E,QAAAA,GAAU,mmCCsB9B,EAf0B,WACxB,OACE,iBAAKd,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,6CACA,SAACH,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACC,EAAD,KACA,SAAC,KAAD,CAAOD,MAAO,EAAd,uCACA,SAACiB,EAAA,EAAD,CAAUF,KAAMA,KAChB,SAAC,KAAD,CAAOf,MAAO,EAAd,2BACA,SAACc,EAAD,MAGL,C,gGCjBDI,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMT,EAA4B,SAAC,GAAc,IAAZF,EAAW,EAAXA,KAI1C,OACE,gBACEb,UAAU,WACVyB,wBAAyB,CACvBC,QANGV,EAAAA,EAAAA,IAAOH,EAAM,CAAEc,QAAQ,MAUjC,C,uDC7BM,IAAMb,EAAY,SAACc,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/AlertEg/Intro.tsx","eg/AlertEg/Demo.tsx","eg/AlertEg/ApiIntro.tsx","eg/AlertEg/code.tsx","eg/AlertEg/index.tsx","eg/CodeShow.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>警告提示，展现需要关注的信息。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>Alert: 主要组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>当某个页面需要向用户显示警告的信息时。</li>\n          <li>非浮层的静态展现形式，始终展现，不会自动消失，用户可以点击关闭。</li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React from 'react';\nimport { Alert } from '../../lib';\nimport SuccessIcon from '../../lib/icons/success.svg';\n\nexport const Demo: React.FC = () => {\n  return (\n    <div className=\"Eg\">\n      <Alert type=\"success\">\n        <span>Success Text Lorem ipsum dolor</span>\n      </Alert>\n      <Alert type=\"info\">\n        <span>Info Text Lorem ipsum dolor</span>\n      </Alert>\n      <Alert type=\"warning\">\n        <span>Warning Text Lorem ipsum dolor</span>\n      </Alert>\n      <Alert type=\"error\">\n        <span>Error Text Lorem ipsum dolor</span>\n      </Alert>\n      <Alert type=\"error\">\n        <span>Success Text Lorem ipsum dolor</span>\n      </Alert>\n      <Alert defineIcon={<SuccessIcon width=\"1.5em\" height=\"1.5em\" />}>\n        <span>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab autem blanditiis consequuntur\n          corporis exercitationem ipsam, nihil nobis optio perspiciatis quas quibusdam repellendus,\n          sequi voluptate! Deleniti fuga pariatur qui ratione voluptatibus!\n        </span>\n      </Alert>\n      <Alert type=\"loading\">\n        <span>Success Text Lorem ipsum dolor</span>\n      </Alert>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [\n  {\n    属性: 'type',\n    说明: 'alert类型',\n    类型: `'success' | 'info' | 'warning' | 'error' | 'loading'`,\n    默认值: 'success'\n  },\n  { 属性: 'defineIcon', 说明: '自定义图标', 类型: 'React.ReactNode', 默认值: '' }\n];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Alert } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  return (\n    <div className=\"Eg\">\n      <Alert type=\"success\">\n        <span>Success Text Lorem ipsum dolor</span>\n      </Alert>\n      <Alert type=\"info\">\n        <span>Info Text Lorem ipsum dolor</span>\n      </Alert>\n      <Alert type=\"warning\">\n        <span>Warning Text Lorem ipsum dolor</span>\n      </Alert>\n      <Alert type=\"error\">\n        <span>Error Text Lorem ipsum dolor</span>\n      </Alert>\n      <Alert type=\"error\">\n        <span>Success Text Lorem ipsum dolor</span>\n      </Alert>\n      <Alert defineIcon={<SuccessIcon width=\"1.5em\" height=\"1.5em\" />}>\n        <span>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab autem blanditiis consequuntur\n          corporis exercitationem ipsam, nihil nobis optio perspiciatis quas quibusdam repellendus,\n          sequi voluptate! Deleniti fuga pariatur qui ratione voluptatibus!\n        </span>\n      </Alert>\n      <Alert type=\"loading\">\n        <span>Success Text Lorem ipsum dolor</span>\n      </Alert>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Alert 警告提示</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["Intro","level","Demo","className","type","defineIcon","width","height","data","header","body","属性","说明","类型","默认值","ApiIntro","code","translate","CodeShow","marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","dangerouslySetInnerHTML","__html","breaks","example"],"sourceRoot":""}