{"version":3,"file":"static/js/752.7fe64fdb.chunk.js","mappings":"oLAKAA,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAI1C,OACE,gBACEC,UAAU,WACVC,wBAAyB,CACvBC,QANGb,EAAAA,EAAAA,IAAOU,EAAM,CAAEI,QAAQ,MAUjC,C,oGC3BYC,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,mHAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,mEAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,6QAKT,E,SCrBYC,EAAiB,WAC5B,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,OACE,gBAAKT,UAAU,KAAf,UACE,iBAAKA,UAAU,SAAf,WACE,UAAC,KAAD,CAASQ,QAASA,EAAlB,WACE,gQAKA,gQAKA,mQAMF,SAAC,KAAD,CAAQE,QAAS,kBAAMD,GAAYD,EAAlB,EAAjB,SAA8CA,EAAU,qBAAQ,4BAIvE,E,UCxBKG,EAAkB,CACtBC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAHe,CAAC,CAAEC,eAAI,UAAWC,eAAI,6CAAWC,eAAI,UAAWC,qBAAK,WAMzDC,EAAqB,WAChC,OACE,gBAAKlB,UAAU,YAAf,UACE,SAAC,KAAD,CAAOW,KAAMA,KAGlB,ECdYZ,G,SAAOoB,E,QAAAA,GAAU,syCCsB9B,EAf0B,WACxB,OACE,iBAAKnB,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,yCACA,SAACI,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACC,EAAD,KACA,SAAC,KAAD,CAAOD,MAAO,EAAd,uCACA,SAACP,EAAA,EAAD,CAAUC,KAAMA,KAChB,SAAC,KAAD,CAAOM,MAAO,EAAd,2BACA,SAACa,EAAD,MAGL,C,uDCrBM,IAAMC,EAAY,SAACC,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/CodeShow.tsx","eg/LoadingEg/Intro.tsx","eg/LoadingEg/Demo.tsx","eg/LoadingEg/ApiIntro.tsx","eg/LoadingEg/code.tsx","eg/LoadingEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>用于页面和区块的加载中状态。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>Loading: 主要组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>页面局部处于等待异步数据或正在渲染过程时，合适的加载动效会有效缓解用户的焦虑。</li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React, { useState } from 'react';\nimport { Button, Loading } from '../../lib';\n\nexport const Demo: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  return (\n    <div className=\"Eg\">\n      <div className=\"showEg\">\n        <Loading loading={loading}>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. A aliquam beatae cum, delectus\n            dolore doloribus ducimus eveniet explicabo iusto labore numquam quae quaerat quis\n            recusandae reprehenderit sapiente, suscipit totam velit.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. A aliquam beatae cum, delectus\n            dolore doloribus ducimus eveniet explicabo iusto labore numquam quae quaerat quis\n            recusandae reprehenderit sapiente, suscipit totam velit.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. A aliquam beatae cum, delectus\n            dolore doloribus ducimus eveniet explicabo iusto labore numquam quae quaerat quis\n            recusandae reprehenderit sapiente, suscipit totam velit.\n          </p>\n        </Loading>\n        <Button onClick={() => setLoading(!loading)}>{loading ? '加载中' : ' 未加载'}</Button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [{ 属性: 'loading', 说明: '显示加载中图标', 类型: 'boolean', 默认值: 'false' }];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport {  Button, Loading } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  const [loading, setLoading] = useState(true);\n  return (\n    <div className=\"Eg\">\n      <div className=\"showEg\">\n        <Loading loading={loading}>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. A aliquam beatae cum, delectus\n            dolore doloribus ducimus eveniet explicabo iusto labore numquam quae quaerat quis\n            recusandae reprehenderit sapiente, suscipit totam velit.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. A aliquam beatae cum, delectus\n            dolore doloribus ducimus eveniet explicabo iusto labore numquam quae quaerat quis\n            recusandae reprehenderit sapiente, suscipit totam velit.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. A aliquam beatae cum, delectus\n            dolore doloribus ducimus eveniet explicabo iusto labore numquam quae quaerat quis\n            recusandae reprehenderit sapiente, suscipit totam velit.\n          </p>\n        </Loading>\n        <Button onClick={() => setLoading(!loading)}>{loading ? '加载中' : ' 未加载'}</Button>\n      </div>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Loading 加载中</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","Demo","useState","loading","setLoading","onClick","data","header","body","属性","说明","类型","默认值","ApiIntro","translate","example"],"sourceRoot":""}