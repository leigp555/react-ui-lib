{"version":3,"file":"static/js/2184.3ecfb23d.chunk.js","mappings":"qLAKAA,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAI1C,OACE,gBACEC,UAAU,WACVC,wBAAyB,CACvBC,QANGb,EAAAA,EAAAA,IAAOU,EAAM,CAAEI,QAAQ,MAUjC,C,mGC3BYC,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,qIAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,kEAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,iNAKT,ECrBYC,EAAiB,WAC5B,IAAMC,EAA+B,CACnCC,QAAS,YACTC,OAAQ,oBAEV,OACE,iBAAKT,UAAU,KAAf,WACE,gBAAKU,MAAOH,EAAZ,UACE,UAAC,KAAD,CACEI,OAAO,UACPC,MAAM,2CACNC,SAAS,+FAHX,WAKE,SAAC,KAAD,CAAQC,KAAK,UAAb,iBAA2B,YAG3B,SAAC,KAAD,kBAAY,aAGhB,gBAAKJ,MAAOH,EAAZ,UACE,UAAC,KAAD,CACEI,OAAO,UACPC,MAAM,mCACNC,SAAS,+FAHX,WAKE,SAAC,KAAD,CAAQC,KAAK,UAAb,iBAA2B,YAG3B,SAAC,KAAD,mBAAY,aAGhB,gBAAKJ,MAAOH,EAAZ,UACE,UAAC,KAAD,CACEQ,IAAK,GACLJ,OAAO,QACPC,MAAM,8CACNC,SAAS,+FAJX,WAME,SAAC,KAAD,CAAQC,KAAK,UAAb,iBAA2B,YAG3B,SAAC,KAAD,mBAAY,aAGhB,gBAAKJ,MAAOH,EAAZ,UACE,UAAC,KAAD,CACEQ,IAAK,GACLJ,OAAO,MACPC,MAAM,mCACNC,SAAS,+FAJX,WAME,SAAC,KAAD,CAAQC,KAAK,UAAb,iBAA2B,YAG3B,SAAC,KAAD,mBAAY,cAKrB,E,UC/CKE,EAAkB,CACtBC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAbe,CACf,CACEC,eAAI,SACJC,eAAI,iCACJC,eAAG,0CACHC,qBAAK,SAEP,CAAEH,eAAI,MAAOC,eAAI,eAAMC,eAAI,SAAUC,qBAAK,MAC1C,CAAEH,eAAI,QAASC,eAAI,eAAMC,eAAI,SAAUC,qBAAK,IAC5C,CAAEH,eAAI,WAAYC,eAAI,qBAAOC,eAAI,SAAUC,qBAAK,MAOrCC,EAAqB,WAChC,OACE,gBAAKvB,UAAU,YAAf,UACE,SAAC,KAAD,CAAOgB,KAAMA,KAGlB,ECxBYjB,G,SAAOyB,E,QAAAA,GAAU,m7DCsB9B,EAf0B,WACxB,OACE,iBAAKxB,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,kCACA,SAACI,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACC,EAAD,KACA,SAAC,KAAD,CAAOD,MAAO,EAAd,uCACA,SAACP,EAAA,EAAD,CAAUC,KAAMA,KAChB,SAAC,KAAD,CAAOM,MAAO,EAAd,2BACA,SAACkB,EAAD,MAGL,C,uDCrBM,IAAMC,EAAY,SAACC,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/CodeShow.tsx","eg/ResultEg/Intro.tsx","eg/ResultEg/Demo.tsx","eg/ResultEg/ApiIntro.tsx","eg/ResultEg/code.tsx","eg/ResultEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>用于反馈一系列操作任务的处理结果。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>Result: 主要组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>当有重要操作需告知用户处理结果，且反馈内容较为复杂时使用。</li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React from 'react';\nimport { Button, Result } from '../../lib';\n\nexport const Demo: React.FC = () => {\n  const wrapCss: React.CSSProperties = {\n    padding: '50px 20px',\n    border: '1px solid orange'\n  };\n  return (\n    <div className=\"Eg\">\n      <div style={wrapCss}>\n        <Result\n          status=\"success\"\n          title=\"Successfully Purchased Cloud Server ECS!\"\n          subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n        >\n          <Button type=\"primary\" key=\"console\">\n            Back\n          </Button>\n          <Button key=\"buy\">Next</Button>\n        </Result>\n      </div>\n      <div style={wrapCss}>\n        <Result\n          status=\"warning\"\n          title=\"Your operation has been executed\"\n          subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n        >\n          <Button type=\"primary\" key=\"console\">\n            Back\n          </Button>\n          <Button key=\"buy\">Close</Button>\n        </Result>\n      </div>\n      <div style={wrapCss}>\n        <Result\n          gap={40}\n          status=\"error\"\n          title=\"There are some problems with your operation\"\n          subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n        >\n          <Button type=\"primary\" key=\"console\">\n            Back\n          </Button>\n          <Button key=\"buy\">Close</Button>\n        </Result>\n      </div>\n      <div style={wrapCss}>\n        <Result\n          gap={20}\n          status=\"404\"\n          title=\"Your operation has been executed\"\n          subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n        >\n          <Button type=\"primary\" key=\"console\">\n            Back\n          </Button>\n          <Button key=\"buy\">Close</Button>\n        </Result>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [\n  {\n    属性: 'status',\n    说明: '空状态类型',\n    类型: `'success' | 'warning' | 'error' | '404'`,\n    默认值: 'false'\n  },\n  { 属性: 'gap', 说明: '间距', 类型: 'number', 默认值: '50' },\n  { 属性: 'title', 说明: '标题', 类型: 'string', 默认值: '' },\n  { 属性: 'subTitle', 说明: '副标题', 类型: 'string', 默认值: '' }\n];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Button } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  const wrapCss: React.CSSProperties = {\n    padding: '50px 20px',\n    border: '1px solid orange'\n  };\n  return (\n    <div className=\"Eg\">\n      <div style={wrapCss}>\n        <Result\n          status=\"success\"\n          title=\"Successfully Purchased Cloud Server ECS!\"\n          subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n        >\n          <Button type=\"primary\" key=\"console\">\n            Back\n          </Button>\n          <Button key=\"buy\">Next</Button>\n        </Result>\n      </div>\n      <div style={wrapCss}>\n        <Result\n          status=\"warning\"\n          title=\"Your operation has been executed\"\n          subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n        >\n          <Button type=\"primary\" key=\"console\">\n            Back\n          </Button>\n          <Button key=\"buy\">Close</Button>\n        </Result>\n      </div>\n      <div style={wrapCss}>\n        <Result\n          gap={40}\n          status=\"error\"\n          title=\"There are some problems with your operation\"\n          subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n        >\n          <Button type=\"primary\" key=\"console\">\n            Back\n          </Button>\n          <Button key=\"buy\">Close</Button>\n        </Result>\n      </div>\n      <div style={wrapCss}>\n        <Result\n          gap={20}\n          status=\"404\"\n          title=\"Your operation has been executed\"\n          subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n        >\n          <Button type=\"primary\" key=\"console\">\n            Back\n          </Button>\n          <Button key=\"buy\">Close</Button>\n        </Result>\n      </div>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Result 结果</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","Demo","wrapCss","padding","border","style","status","title","subTitle","type","gap","data","header","body","属性","说明","类型","默认值","ApiIntro","translate","example"],"sourceRoot":""}