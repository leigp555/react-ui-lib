{"version":3,"file":"static/js/9988.9225588f.chunk.js","mappings":"qLAKAA,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAI1C,OACE,gBACEC,UAAU,WACVC,wBAAyB,CACvBC,QANGb,EAAAA,EAAAA,IAAOU,EAAM,CAAEI,QAAQ,MAUjC,C,mGC3BYC,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,iGAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,2BACE,oEACA,uEAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,6KACA,SAAC,KAAD,WACE,2BACE,0FACA,sJACA,8EAKT,E,UCxBYC,EAAiB,WAc5B,OACE,gBAAKN,UAAU,KAAf,UACE,gBAAKA,UAAU,SAAf,UACE,SAAC,KAAD,CAAQO,QAhBD,YACXC,EAAAA,EAAAA,IACE,UAAC,KAAD,YACE,+CACA,yPAMF,IAEH,EAIK,6BAIP,E,UCbKC,EAAkB,CACtBC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAVe,CACf,CACEC,eAAI,mBACJC,eAAI,qEACJC,eAAI,WACJC,qBAAK,MAQIC,EAAqB,WAChC,OACE,iBAAKhB,UAAU,YAAf,WACE,SAAC,KAAD,CAAOK,MAAO,EAAd,+BACA,SAAC,KAAD,CAAOI,KAAMA,MAGlB,ECtBYV,G,SAAOkB,E,QAAAA,GAAU,msBCsB9B,EAf0B,WACxB,OACE,iBAAKjB,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,oDACA,SAACI,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACC,EAAD,KACA,SAAC,KAAD,CAAOD,MAAO,EAAd,uCACA,SAACP,EAAA,EAAD,CAAUC,KAAMA,KAChB,SAAC,KAAD,CAAOM,MAAO,EAAd,2BACA,SAACW,EAAD,MAGL,C,uDCrBM,IAAMC,EAAY,SAACC,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/CodeShow.tsx","eg/NotificationEg/Intro.tsx","eg/NotificationEg/Demo.tsx","eg/NotificationEg/ApiIntro.tsx","eg/NotificationEg/code.tsx","eg/NotificationEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>全局展示通知提醒信息。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>Notification: 主要组件</li>\n          <li>openNotification: 子组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <p>在系统四个角显示通知提醒信息。经常用于以下情况：</p>\n      <Paragraph>\n        <ul>\n          <li>较为复杂的通知内容。</li>\n          <li>带有交互的通知，给出用户下一步的行动点。</li>\n          <li>系统主动推送。</li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React from 'react';\nimport { Button, Notification } from '../../lib';\nimport { openNotification } from '../../lib/Notification/Notification';\n\nexport const Demo: React.FC = () => {\n  const open = () => {\n    openNotification(\n      <Notification>\n        <p>Notification Title</p>\n        <div>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci assumenda cum ex\n          explicabo fuga, illo ipsa laudantium libero magni minus nobis nostrum, odio quam quibusdam\n          recusandae saepe soluta totam voluptates?\n        </div>\n      </Notification>,\n      3000\n    );\n  };\n  return (\n    <div className=\"Eg\">\n      <div className=\"showEg\">\n        <Button onClick={open}>按钮</Button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table, Title } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [\n  {\n    属性: 'openNotification',\n    说明: '接受Notification组件和持续时间',\n    类型: 'Function',\n    默认值: ''\n  }\n];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Title level={4}>openNotification</Title>\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport {  Button, Notification ,openNotification} from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  const open = () => {\n    openNotification(\n      <Notification>\n        <p>Notification Title</p>\n        <div>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci assumenda cum ex\n          explicabo fuga, illo ipsa laudantium libero magni minus nobis nostrum, odio quam quibusdam\n          recusandae saepe soluta totam voluptates?\n        </div>\n      </Notification>,\n      3000\n    );\n  };\n  return (\n    <div className=\"Eg\">\n      <div className=\"showEg\">\n        <Button onClick={open}>按钮</Button>\n      </div>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Notification 通知提醒</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","Demo","onClick","openNotification","data","header","body","属性","说明","类型","默认值","ApiIntro","translate","example"],"sourceRoot":""}