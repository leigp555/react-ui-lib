{"version":3,"file":"static/js/4903.91f665ac.chunk.js","mappings":"qLAKAA,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAI1C,OACE,gBACEC,UAAU,WACVC,wBAAyB,CACvBC,QANGb,EAAAA,EAAAA,IAAOU,EAAM,CAAEI,QAAQ,MAUjC,C,qGC3BYC,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,+HAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,2BACE,sJACA,iKAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,2BACE,sJACA,kKAKT,E,SCvBYC,EAAiB,WAC5B,OAA0BC,EAAAA,EAAAA,UAAiB,GAA3C,eAAOC,EAAP,KAAcC,EAAd,KACA,OACE,gBAAKT,UAAU,KAAf,UACE,SAAC,KAAD,CAAYU,aAAcF,EAAOC,SAAUA,EAAUE,MAAO,CAAEC,MAAO,SAArE,UACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,6BACA,SAAC,KAAD,CAAUJ,MAAO,EAAjB,uBACA,SAAC,KAAD,CAAUA,MAAO,EAAjB,uBACA,UAAC,KAAD,YACE,SAAC,KAAD,6BACA,SAAC,KAAD,CAAUA,MAAO,EAAjB,uBACA,SAAC,KAAD,CAAUA,MAAO,EAAjB,6BAGJ,UAAC,KAAD,YACE,SAAC,KAAD,6BACA,SAAC,KAAD,CAAUA,MAAO,EAAjB,uBACA,SAAC,KAAD,CAAUA,MAAO,EAAjB,uBACA,SAAC,KAAD,CAAUA,MAAO,EAAjB,+BAMX,E,UCxBKK,EAA0B,CAC9BC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KAHmB,CAAC,CAAEC,eAAI,QAASC,eAAI,kBAASC,eAAI,SAAUC,qBAAK,OAMxDC,EAAqB,WAChC,OACE,iBAAKpB,UAAU,YAAf,WACE,SAAC,KAAD,CAAOK,MAAO,EAAd,uBACA,SAAC,KAAD,CAAOgB,KAAMR,MAGlB,ECfYd,G,SAAOuB,E,QAAAA,GAAU,2gCCsB9B,EAf0B,WACxB,OACE,iBAAKtB,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,gCACA,SAACI,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACC,EAAD,KACA,SAAC,KAAD,CAAOD,MAAO,EAAd,uCACA,SAACP,EAAA,EAAD,CAAUC,KAAMA,KAChB,SAAC,KAAD,CAAOM,MAAO,EAAd,2BACA,SAACe,EAAD,MAGL,C,uDCrBM,IAAME,EAAY,SAACC,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/CodeShow.tsx","eg/MenuEg/Intro.tsx","eg/MenuEg/Demo.tsx","eg/MenuEg/ApiIntro.tsx","eg/MenuEg/code.tsx","eg/MenuEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>为页面和功能提供导航的菜单列表。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>使用导航菜单可以快速在网站的页面间跳转。</li>\n          <li>导航同级之间在逻辑上需为并列且互斥的关系。</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>使用导航菜单可以快速在网站的页面间跳转。</li>\n          <li>导航同级之间在逻辑上需为并列且互斥的关系。</li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React, { useState } from 'react';\nimport { ColumnMenu, ColumnSub, ItemGroup, Label, MenuItem } from '../../lib';\n\nexport const Demo: React.FC = () => {\n  const [order, setOrder] = useState<number>(1);\n  return (\n    <div className=\"Eg\">\n      <ColumnMenu defaultOrder={order} setOrder={setOrder} style={{ width: '180px' }}>\n        <ColumnSub>\n          <ItemGroup>\n            <Label>标签1</Label>\n            <MenuItem order={1}>Option 1</MenuItem>\n            <MenuItem order={2}>Option 2</MenuItem>\n            <ItemGroup>\n              <Label>标签2</Label>\n              <MenuItem order={3}>Option 4</MenuItem>\n              <MenuItem order={4}>Option 5</MenuItem>\n            </ItemGroup>\n          </ItemGroup>\n          <ItemGroup>\n            <Label>标签3</Label>\n            <MenuItem order={5}>Option 6</MenuItem>\n            <MenuItem order={6}>Option 7</MenuItem>\n            <MenuItem order={7}>Option 8</MenuItem>\n          </ItemGroup>\n        </ColumnSub>\n      </ColumnMenu>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table, Title } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst MenuItemBody = [{ 属性: 'order', 说明: '唯一key', 类型: 'number', 默认值: '1' }];\nconst MenuItemData: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: MenuItemBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Title level={4}>MenuItem</Title>\n      <Table data={MenuItemData} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport {  ColumnMenu, ColumnSub, ItemGroup, Label, MenuItem  } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  const [order, setOrder] = useState<number>(1);\n  return (\n    <div className=\"Eg\">\n      <ColumnMenu defaultOrder={order} setOrder={setOrder} style={{ width: '180px' }}>\n        <ColumnSub>\n          <ItemGroup>\n            <Label>标签1</Label>\n            <MenuItem order={1}>Option 1</MenuItem>\n            <MenuItem order={2}>Option 2</MenuItem>\n            <ItemGroup>\n              <Label>标签2</Label>\n              <MenuItem order={3}>Option 4</MenuItem>\n              <MenuItem order={4}>Option 5</MenuItem>\n            </ItemGroup>\n          </ItemGroup>\n          <ItemGroup>\n            <Label>标签3</Label>\n            <MenuItem order={5}>Option 6</MenuItem>\n            <MenuItem order={6}>Option 7</MenuItem>\n            <MenuItem order={7}>Option 8</MenuItem>\n          </ItemGroup>\n        </ColumnSub>\n      </ColumnMenu>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Menu 菜单</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","Demo","useState","order","setOrder","defaultOrder","style","width","MenuItemData","header","body","属性","说明","类型","默认值","ApiIntro","data","translate","example"],"sourceRoot":""}