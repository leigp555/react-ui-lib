{"version":3,"file":"static/js/5083.202510e7.chunk.js","mappings":"qLAKAA,EAAAA,GAAAA,WAAkB,CAChBC,UADgB,SACNC,EAAKC,GACb,IAAMC,EAAWC,EAAAA,EAAAA,YAAiBF,GAAQA,EAAO,YACjD,OAAOE,EAAAA,EAAAA,UAAeH,EAAK,CAAEE,SAAAA,IAAYE,KAC1C,EACDC,WAAY,iBACZC,KAAK,IAOA,IAAMC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAI1C,OACE,gBACEC,UAAU,WACVC,wBAAyB,CACvBC,QANGb,EAAAA,EAAAA,IAAOU,EAAM,CAAEI,QAAQ,MAUjC,C,qGC3BYC,EAAkB,WAC7B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAAC,KAAD,WACE,mEAEF,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,iEAGJ,SAAC,KAAD,CAAOA,MAAO,EAAd,uCACA,SAAC,KAAD,WACE,yBACE,wWAQT,E,SCxBYC,EAAiB,WAC5B,OAA4CC,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA8CF,EAAAA,EAAAA,WAAS,GAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KA2BA,OACE,iBAAKX,UAAU,KAAf,WACE,4BACE,SAAC,KAAD,CAAQY,KAAK,UAAUC,QA7BX,WAChBJ,GAAkB,EACnB,EA2BK,wBAGA,UAAC,KAAD,CAAOK,MAAM,cAAcC,QAASP,EAAgBQ,KA5BzC,WACfP,GAAkB,GAClBQ,QAAQC,IAAI,eACb,EAyByEC,SAvBrD,WACnBV,GAAkB,GAClBQ,QAAQC,IAAI,eACb,EAoBK,WACE,6CACA,6CACA,mDAGJ,4BACE,SAAC,KAAD,CAAQN,KAAK,UAAUC,QAzBV,WACjBF,GAAmB,EACpB,EAuBK,sBAGA,UAAC,KAAD,CACEG,MAAM,cACNC,QAASL,EACTM,KA5BU,WAChBL,GAAmB,GACnBM,QAAQC,IAAI,eACb,EA0BOC,SAxBc,WACpBR,GAAmB,GACnBM,QAAQC,IAAI,eACb,EAsBOE,MAAM,EALR,WAOE,6CACA,6CACA,oDAKT,E,UCnDKC,EAAkB,CACtBC,OAAQ,CAAC,eAAM,eAAM,eAAM,sBAC3BC,KATe,CACf,CAAEC,eAAI,QAASC,eAAI,eAAMC,eAAI,SAAUC,qBAAK,IAC5C,CAAEH,eAAI,UAAWC,eAAI,eAAMC,eAAI,UAAWC,qBAAK,SAC/C,CAAEH,eAAI,OAAQC,eAAI,uCAAUC,eAAI,cAAeC,qBAAK,IACpD,CAAEH,eAAI,WAAYC,eAAI,uCAAUC,eAAI,cAAeC,qBAAK,IACxD,CAAEH,eAAI,OAAQC,eAAI,eAAMC,eAAI,UAAWC,qBAAK,UAOjCC,EAAqB,WAChC,OACE,gBAAK5B,UAAU,YAAf,UACE,SAAC,KAAD,CAAOqB,KAAMA,KAGlB,ECpBYtB,G,SAAO8B,E,QAAAA,GAAU,mkDCsB9B,EAf0B,WACxB,OACE,iBAAK7B,UAAU,eAAf,WACE,eAAIA,UAAU,QAAd,uCACA,SAACI,EAAD,KACA,SAAC,KAAD,CAAOC,MAAO,EAAd,2BACA,SAACC,EAAD,KACA,SAAC,KAAD,CAAOD,MAAO,EAAd,uCACA,SAACP,EAAA,EAAD,CAAUC,KAAMA,KAChB,SAAC,KAAD,CAAOM,MAAO,EAAd,2BACA,SAACuB,EAAD,MAGL,C,uDCrBM,IAAMC,EAAY,SAACC,GAAD,MAAqB,0BAAqBA,GAArB,OAArB,C","sources":["eg/CodeShow.tsx","eg/ModalEg/Intro.tsx","eg/ModalEg/Demo.tsx","eg/ModalEg/ApiIntro.tsx","eg/ModalEg/code.tsx","eg/ModalEg/index.tsx","eg/translate.tsx"],"sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport hljs from 'highlight.js';\n\n// 配置marked\nmarked.setOptions({\n  highlight(str, lang) {\n    const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n    return hljs.highlight(str, { language }).value;\n  },\n  langPrefix: 'hljs language-',\n  gfm: true\n});\n\ninterface Props {\n  code: string;\n}\n\nexport const CodeShow: React.FC<Props> = ({ code }) => {\n  const render = () => {\n    return marked(code, { breaks: true });\n  };\n  return (\n    <div\n      className=\"showCode\"\n      dangerouslySetInnerHTML={{\n        __html: render()\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { Paragraph, Title, Typography } from '../../lib';\n\nexport const Intro: React.FC = () => {\n  return (\n    <Typography>\n      <Title level={3}>简介</Title>\n      <Paragraph>\n        <p>模态对话框。</p>\n      </Paragraph>\n      <Title level={3}>组件概览</Title>\n      <Paragraph>\n        <ul>\n          <li>Modal: 主要组件</li>\n        </ul>\n      </Paragraph>\n      <Title level={3}>使用场景</Title>\n      <Paragraph>\n        <ul>\n          <li>\n            需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 Modal\n            在当前页面正中打开一个浮层，承载相应的操作。\n          </li>\n        </ul>\n      </Paragraph>\n    </Typography>\n  );\n};\n","import React, { useState } from 'react';\nimport { Button, Modal } from '../../lib';\n\nexport const Demo: React.FC = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isModalVisible2, setIsModalVisible2] = useState(false);\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n    console.log('确定');\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    console.log('取消');\n  };\n\n  const showModal2 = () => {\n    setIsModalVisible2(true);\n  };\n  const handleOk2 = () => {\n    setIsModalVisible2(false);\n    console.log('确定');\n  };\n\n  const handleCancel2 = () => {\n    setIsModalVisible2(false);\n    console.log('取消');\n  };\n  return (\n    <div className=\"Eg\">\n      <div>\n        <Button type=\"primary\" onClick={showModal}>\n          have mask\n        </Button>\n        <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n        </Modal>\n      </div>\n      <div>\n        <Button type=\"primary\" onClick={showModal2}>\n          no mask\n        </Button>\n        <Modal\n          title=\"Basic Modal\"\n          visible={isModalVisible2}\n          onOk={handleOk2}\n          onCancel={handleCancel2}\n          mask={false}\n        >\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '../../lib';\nimport { TableData } from '../../lib/Table/Table';\n\nconst dataBody = [\n  { 属性: 'title', 说明: '标题', 类型: 'string', 默认值: '' },\n  { 属性: 'visible', 说明: '显示', 类型: 'boolean', 默认值: 'false' },\n  { 属性: 'onOk', 说明: '确定执行回调', 类型: ' () => void', 默认值: '' },\n  { 属性: 'onCancel', 说明: '取消执行回调', 类型: ' () => void', 默认值: '' },\n  { 属性: 'mask', 说明: '遮罩', 类型: 'boolean', 默认值: 'true' }\n];\nconst data: TableData = {\n  header: ['属性', '说明', '类型', '默认值'],\n  body: dataBody\n};\n\nexport const ApiIntro: React.FC = () => {\n  return (\n    <div className=\"interface\">\n      <Table data={data} />\n    </div>\n  );\n};\n","import { translate } from '../translate';\n\nexport const code = translate(`\nimport { Button, Modal } from 'uix-react';\\n\nexport const App:React.RC=()=>{\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isModalVisible2, setIsModalVisible2] = useState(false);\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n    console.log('确定');\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    console.log('取消');\n  };\n\n  const showModal2 = () => {\n    setIsModalVisible2(true);\n  };\n  const handleOk2 = () => {\n    setIsModalVisible2(false);\n    console.log('确定');\n  };\n\n  const handleCancel2 = () => {\n    setIsModalVisible2(false);\n    console.log('取消');\n  };\n  return (\n    <div className=\"Eg\">\n      <div>\n        <Button type=\"primary\" onClick={showModal}>\n          have mask\n        </Button>\n        <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n        </Modal>\n      </div>\n      <div>\n        <Button type=\"primary\" onClick={showModal2}>\n          no mask\n        </Button>\n        <Modal\n          title=\"Basic Modal\"\n          visible={isModalVisible2}\n          onOk={handleOk2}\n          onCancel={handleCancel2}\n          mask={false}\n        >\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n`);\n","import React from 'react';\nimport { Intro } from './Intro';\nimport { Demo } from './Demo';\nimport { CodeShow } from '../CodeShow';\nimport { ApiIntro } from './ApiIntro';\nimport '../content.scss';\nimport { Title } from '../../lib';\nimport { code } from './code';\n\nconst Example: React.FC = () => {\n  return (\n    <div className=\"content-wrap\">\n      <h2 className=\"title\">Modal 对话框</h2>\n      <Intro />\n      <Title level={3}>案例</Title>\n      <Demo />\n      <Title level={3}>代码示例</Title>\n      <CodeShow code={code} />\n      <Title level={3}>接口</Title>\n      <ApiIntro />\n    </div>\n  );\n};\n\nexport default Example;\n","// eslint-disable-next-line no-useless-concat\nexport const translate = (example: string) => '```javascript' + `${example}` + '\\n' + '```';\n"],"names":["marked","highlight","str","lang","language","hljs","value","langPrefix","gfm","CodeShow","code","className","dangerouslySetInnerHTML","__html","breaks","Intro","level","Demo","useState","isModalVisible","setIsModalVisible","isModalVisible2","setIsModalVisible2","type","onClick","title","visible","onOk","console","log","onCancel","mask","data","header","body","属性","说明","类型","默认值","ApiIntro","translate","example"],"sourceRoot":""}